{
	"id": "81224d359faf8e6b601edd2e5fb6edd8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Escrow.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity 0.8.26;\r\n\r\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\n/**\r\n * @title Escrow\r\n * @dev An escrow contract for holding funds between two parties\r\n */\r\ncontract Escrow is ReentrancyGuard {\r\n    bytes32 public constant PLAYER_ROLE = keccak256(\"player\");\r\n    bytes32 public constant CHALLENGER_ROLE = keccak256(\"challenger\");\r\n\r\n    struct Storage {\r\n        uint128 totalAmount; // Use uint128 to pack with other fields\r\n        address player;\r\n        address challenger;\r\n        bool isActive;\r\n    }\r\n\r\n    mapping(bytes32 => Storage) public escrowStorage;\r\n\r\n    // Events\r\n    /**\r\n     * @notice Emitted when a deposit is made to an escrow\r\n     * @param storeHash The unique hash identifying the escrow\r\n     * @param depositor The address of the depositor\r\n     * @param identity The role of the depositor (PLAYER_ROLE or CHALLENGER_ROLE)\r\n     * @param amount The amount of Ether deposited\r\n     */\r\n    event TokensStored(bytes32 indexed storeHash, address indexed depositor, bytes32 identity, uint amount);\r\n\r\n    /**\r\n     * @notice Emitted when funds are released from an escrow\r\n     * @param storeHash The unique hash identifying the escrow\r\n     * @param amount The amount of Ether released\r\n     * @param winner The address receiving the funds\r\n     */\r\n    event ReleasedFunds(bytes32 indexed storeHash, uint indexed amount, address indexed winner);\r\n\r\n    /**\r\n     * @notice Store tokens in the escrow\r\n     * @param storeHash The unique identifier for this escrow\r\n     * @param identity The role of the depositor (PLAYER_ROLE or CHALLENGER_ROLE)\r\n     */\r\n    function storeTokens(bytes32 storeHash, bytes32 identity) external payable {\r\n        // Checks\r\n        require(msg.value > 0, \"Invalid deposit\");\r\n        require(identity == PLAYER_ROLE || identity == CHALLENGER_ROLE, \"Invalid identity\");\r\n        require(msg.value <= type(uint128).max, \"Amount too large\"); // Prevent overflow\r\n\r\n        Storage storage escrow = escrowStorage[storeHash];\r\n\r\n        // For new or existing escrows, validate participant slots\r\n        if (identity == PLAYER_ROLE) {\r\n            require(escrow.player == address(0), \"Player already set\");\r\n            escrow.player = msg.sender;\r\n        } else {\r\n            require(escrow.challenger == address(0), \"Challenger already set\");\r\n            escrow.challenger = msg.sender;\r\n        }\r\n\r\n        // Update state efficiently\r\n        unchecked {\r\n            escrow.totalAmount += uint128(msg.value); // Safe due to prior check\r\n        }\r\n        escrow.isActive = true;\r\n\r\n        // Emit event\r\n        emit TokensStored(storeHash, msg.sender, identity, msg.value);\r\n    }\r\n\r\n    /**\r\n     * @notice Release funds to the winner\r\n     * @param storeHash The unique identifier for this escrow\r\n     * @param winner The address that should receive the funds\r\n     */\r\n    function releaseFunds(bytes32 storeHash, address winner) external nonReentrant {\r\n        Storage storage escrow = escrowStorage[storeHash];\r\n\r\n        // Checks\r\n        require(escrow.isActive, \"Escrow is not active\");\r\n        require(escrow.player == winner || escrow.challenger == winner, \"Invalid winner\");\r\n        require(escrow.totalAmount > 0, \"No funds to release\");\r\n\r\n        // Effects\r\n        uint amount = escrow.totalAmount;\r\n        escrow.totalAmount = 0;\r\n        escrow.isActive = false;\r\n\r\n        // Interactions\r\n        emit ReleasedFunds(storeHash, amount, winner);\r\n\r\n        (bool success, ) = winner.call{value: amount}(\"\");\r\n        require(success, \"Transfer failed\");\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Escrow.sol": {
				"Escrow": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "storeHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								}
							],
							"name": "ReleasedFunds",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "storeHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "depositor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "identity",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensStored",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CHALLENGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PLAYER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "escrowStorage",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "totalAmount",
									"type": "uint128"
								},
								{
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "challenger",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "storeHash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "winner",
									"type": "address"
								}
							],
							"name": "releaseFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "storeHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "identity",
									"type": "bytes32"
								}
							],
							"name": "storeTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An escrow contract for holding funds between two parties",
						"events": {
							"ReleasedFunds(bytes32,uint256,address)": {
								"params": {
									"amount": "The amount of Ether released",
									"storeHash": "The unique hash identifying the escrow",
									"winner": "The address receiving the funds"
								}
							},
							"TokensStored(bytes32,address,bytes32,uint256)": {
								"params": {
									"amount": "The amount of Ether deposited",
									"depositor": "The address of the depositor",
									"identity": "The role of the depositor (PLAYER_ROLE or CHALLENGER_ROLE)",
									"storeHash": "The unique hash identifying the escrow"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"releaseFunds(bytes32,address)": {
								"params": {
									"storeHash": "The unique identifier for this escrow",
									"winner": "The address that should receive the funds"
								}
							},
							"storeTokens(bytes32,bytes32)": {
								"params": {
									"identity": "The role of the depositor (PLAYER_ROLE or CHALLENGER_ROLE)",
									"storeHash": "The unique identifier for this escrow"
								}
							}
						},
						"title": "Escrow",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Escrow.sol\":247:3648  contract Escrow is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  sstore\n    /* \"Escrow.sol\":247:3648  contract Escrow is ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Escrow.sol\":247:3648  contract Escrow is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x16c30ebc\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2fa0b49f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x530adbb4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7d25e89d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa0946f92\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Escrow.sol\":289:346  bytes32 public constant PLAYER_ROLE = keccak256(\"player\") */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n        /* \"Escrow.sol\":327:346  keccak256(\"player\") */\n      0x326d994cdb81aaccb84aa1f62bae636dc0aaf98ab22f66b0c9224f1edccd7cc9\n        /* \"Escrow.sol\":289:346  bytes32 public constant PLAYER_ROLE = keccak256(\"player\") */\n      dup2\n      jump\n    tag_8:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Escrow.sol\":289:346  bytes32 public constant PLAYER_ROLE = keccak256(\"player\") */\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Escrow.sol\":1679:2741  function storeTokens(bytes32 storeHash, bytes32 identity) external payable {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Escrow.sol\":353:418  bytes32 public constant CHALLENGER_ROLE = keccak256(\"challenger\") */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_8\n        /* \"Escrow.sol\":395:418  keccak256(\"challenger\") */\n      0xae8b6f0f354448b9bed217dcbb6effc6cc52560477cd31206503fbd937f7a378\n        /* \"Escrow.sol\":353:418  bytes32 public constant CHALLENGER_ROLE = keccak256(\"challenger\") */\n      dup2\n      jump\n        /* \"Escrow.sol\":2938:3645  function releaseFunds(bytes32 storeHash, address winner) external nonReentrant {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_12\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n        /* \"Escrow.sol\":607:655  mapping(bytes32 => Storage) public escrowStorage */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      0x01\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      swap2\n      dup2\n      add\n      sload\n      0x02\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      swap2\n      dup2\n      and\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup5\n      jump\n    tag_26:\n      0x40\n      dup1\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":1434:1481   */\n      swap6\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":1416:1482   */\n      dup6\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1518:1550   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":1513:1515   */\n      0x20\n        /* \"#utility.yul\":1498:1516   */\n      dup7\n      add\n        /* \"#utility.yul\":1491:1551   */\n      mstore\n        /* \"#utility.yul\":1587:1619   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":1567:1585   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":1560:1620   */\n      mstore\n        /* \"#utility.yul\":1663:1677   */\n      iszero\n        /* \"#utility.yul\":1656:1678   */\n      iszero\n        /* \"#utility.yul\":1651:1653   */\n      0x60\n        /* \"#utility.yul\":1636:1654   */\n      dup3\n      add\n        /* \"#utility.yul\":1629:1679   */\n      mstore\n        /* \"#utility.yul\":1403:1406   */\n      0x80\n        /* \"#utility.yul\":1388:1407   */\n      add\n        /* \"Escrow.sol\":607:655  mapping(bytes32 => Storage) public escrowStorage */\n      tag_10\n        /* \"#utility.yul\":1191:1685   */\n      jump\n        /* \"Escrow.sol\":1679:2741  function storeTokens(bytes32 storeHash, bytes32 identity) external payable {... */\n    tag_15:\n        /* \"Escrow.sol\":1804:1805  0 */\n      0x00\n        /* \"Escrow.sol\":1792:1801  msg.value */\n      callvalue\n        /* \"Escrow.sol\":1792:1805  msg.value > 0 */\n      gt\n        /* \"Escrow.sol\":1784:1825  require(msg.value > 0, \"Invalid deposit\") */\n      tag_33\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1892:1894   */\n      0x20\n        /* \"Escrow.sol\":1784:1825  require(msg.value > 0, \"Invalid deposit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1874:1895   */\n      mstore\n        /* \"#utility.yul\":1931:1933   */\n      0x0f\n        /* \"#utility.yul\":1911:1929   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1904:1934   */\n      mstore\n      shl(0x8a, 0x125b9d985b1a590819195c1bdcda5d)\n        /* \"#utility.yul\":1950:1968   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1943:1988   */\n      mstore\n        /* \"#utility.yul\":2005:2023   */\n      0x64\n      add\n        /* \"Escrow.sol\":1784:1825  require(msg.value > 0, \"Invalid deposit\") */\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n        /* \"Escrow.sol\":327:346  keccak256(\"player\") */\n      0x326d994cdb81aaccb84aa1f62bae636dc0aaf98ab22f66b0c9224f1edccd7cc9\n        /* \"Escrow.sol\":1844:1852  identity */\n      dup2\n        /* \"Escrow.sol\":1844:1867  identity == PLAYER_ROLE */\n      eq\n        /* \"Escrow.sol\":1844:1898  identity == PLAYER_ROLE || identity == CHALLENGER_ROLE */\n      dup1\n      tag_36\n      jumpi\n      pop\n        /* \"Escrow.sol\":395:418  keccak256(\"challenger\") */\n      0xae8b6f0f354448b9bed217dcbb6effc6cc52560477cd31206503fbd937f7a378\n        /* \"Escrow.sol\":1871:1879  identity */\n      dup2\n        /* \"Escrow.sol\":1871:1898  identity == CHALLENGER_ROLE */\n      eq\n        /* \"Escrow.sol\":1844:1898  identity == PLAYER_ROLE || identity == CHALLENGER_ROLE */\n    tag_36:\n        /* \"Escrow.sol\":1836:1919  require(identity == PLAYER_ROLE || identity == CHALLENGER_ROLE, \"Invalid identity\") */\n      tag_37\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2236:2238   */\n      0x20\n        /* \"Escrow.sol\":1836:1919  require(identity == PLAYER_ROLE || identity == CHALLENGER_ROLE, \"Invalid identity\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2218:2239   */\n      mstore\n        /* \"#utility.yul\":2275:2277   */\n      0x10\n        /* \"#utility.yul\":2255:2273   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2248:2278   */\n      mstore\n      shl(0x80, 0x496e76616c6964206964656e74697479)\n        /* \"#utility.yul\":2294:2312   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2287:2333   */\n      mstore\n        /* \"#utility.yul\":2350:2368   */\n      0x64\n      add\n        /* \"Escrow.sol\":1836:1919  require(identity == PLAYER_ROLE || identity == CHALLENGER_ROLE, \"Invalid identity\") */\n      tag_34\n        /* \"#utility.yul\":2034:2374   */\n      jump\n        /* \"Escrow.sol\":1836:1919  require(identity == PLAYER_ROLE || identity == CHALLENGER_ROLE, \"Invalid identity\") */\n    tag_37:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"Escrow.sol\":1938:1947  msg.value */\n      callvalue\n        /* \"Escrow.sol\":1938:1968  msg.value <= type(uint128).max */\n      gt\n      iszero\n        /* \"Escrow.sol\":1930:1989  require(msg.value <= type(uint128).max, \"Amount too large\") */\n      tag_40\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2581:2583   */\n      0x20\n        /* \"Escrow.sol\":1930:1989  require(msg.value <= type(uint128).max, \"Amount too large\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2563:2584   */\n      mstore\n        /* \"#utility.yul\":2620:2622   */\n      0x10\n        /* \"#utility.yul\":2600:2618   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2593:2623   */\n      mstore\n      shl(0x80, 0x416d6f756e7420746f6f206c61726765)\n        /* \"#utility.yul\":2639:2657   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2632:2678   */\n      mstore\n        /* \"#utility.yul\":2695:2713   */\n      0x64\n      add\n        /* \"Escrow.sol\":1930:1989  require(msg.value <= type(uint128).max, \"Amount too large\") */\n      tag_34\n        /* \"#utility.yul\":2379:2719   */\n      jump\n        /* \"Escrow.sol\":1930:1989  require(msg.value <= type(uint128).max, \"Amount too large\") */\n    tag_40:\n        /* \"Escrow.sol\":2022:2044  Storage storage escrow */\n      0x00\n        /* \"Escrow.sol\":2047:2071  escrowStorage[storeHash] */\n      dup3\n      dup2\n      mstore\n        /* \"Escrow.sol\":2047:2060  escrowStorage */\n      0x01\n        /* \"Escrow.sol\":2047:2071  escrowStorage[storeHash] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Escrow.sol\":2156:2179  identity == PLAYER_ROLE */\n      0xcd9266b3247e553347b55e09d4519c923f5506754dd0994f36ddb0e123328337\n      dup3\n      add\n        /* \"Escrow.sol\":2152:2451  if (identity == PLAYER_ROLE) {... */\n      tag_43\n      jumpi\n        /* \"Escrow.sol\":2204:2217  escrow.player */\n      0x01\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Escrow.sol\":2204:2231  escrow.player == address(0) */\n      iszero\n        /* \"Escrow.sol\":2196:2254  require(escrow.player == address(0), \"Player already set\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2926:2928   */\n      0x20\n        /* \"Escrow.sol\":2196:2254  require(escrow.player == address(0), \"Player already set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2908:2929   */\n      mstore\n        /* \"#utility.yul\":2965:2967   */\n      0x12\n        /* \"#utility.yul\":2945:2963   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2938:2968   */\n      mstore\n      shl(0x72, 0x141b185e595c88185b1c9958591e481cd95d)\n        /* \"#utility.yul\":2984:3002   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2977:3025   */\n      mstore\n        /* \"#utility.yul\":3042:3060   */\n      0x64\n      add\n        /* \"Escrow.sol\":2196:2254  require(escrow.player == address(0), \"Player already set\") */\n      tag_34\n        /* \"#utility.yul\":2724:3066   */\n      jump\n        /* \"Escrow.sol\":2196:2254  require(escrow.player == address(0), \"Player already set\") */\n    tag_44:\n        /* \"Escrow.sol\":2269:2282  escrow.player */\n      0x01\n      dup2\n      add\n        /* \"Escrow.sol\":2269:2295  escrow.player = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"Escrow.sol\":2285:2295  msg.sender */\n      caller\n        /* \"Escrow.sol\":2269:2295  escrow.player = msg.sender */\n      or\n      swap1\n      sstore\n        /* \"Escrow.sol\":2152:2451  if (identity == PLAYER_ROLE) {... */\n      jump(tag_47)\n    tag_43:\n        /* \"Escrow.sol\":2336:2353  escrow.challenger */\n      0x02\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Escrow.sol\":2336:2367  escrow.challenger == address(0) */\n      iszero\n        /* \"Escrow.sol\":2328:2394  require(escrow.challenger == address(0), \"Challenger already set\") */\n      tag_48\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3273:3275   */\n      0x20\n        /* \"Escrow.sol\":2328:2394  require(escrow.challenger == address(0), \"Challenger already set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3255:3276   */\n      mstore\n        /* \"#utility.yul\":3312:3314   */\n      0x16\n        /* \"#utility.yul\":3292:3310   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3285:3315   */\n      mstore\n      shl(0x52, 0x10da185b1b195b99d95c88185b1c9958591e481cd95d)\n        /* \"#utility.yul\":3331:3349   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3324:3376   */\n      mstore\n        /* \"#utility.yul\":3393:3411   */\n      0x64\n      add\n        /* \"Escrow.sol\":2328:2394  require(escrow.challenger == address(0), \"Challenger already set\") */\n      tag_34\n        /* \"#utility.yul\":3071:3417   */\n      jump\n        /* \"Escrow.sol\":2328:2394  require(escrow.challenger == address(0), \"Challenger already set\") */\n    tag_48:\n        /* \"Escrow.sol\":2409:2426  escrow.challenger */\n      0x02\n      dup2\n      add\n        /* \"Escrow.sol\":2409:2439  escrow.challenger = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"Escrow.sol\":2429:2439  msg.sender */\n      caller\n        /* \"Escrow.sol\":2409:2439  escrow.challenger = msg.sender */\n      or\n      swap1\n      sstore\n        /* \"Escrow.sol\":2152:2451  if (identity == PLAYER_ROLE) {... */\n    tag_47:\n        /* \"Escrow.sol\":2525:2565  escrow.totalAmount += uint128(msg.value) */\n      dup1\n      sload\n      not(sub(shl(0x80, 0x01), 0x01))\n      dup2\n      and\n        /* \"Escrow.sol\":2555:2564  msg.value */\n      callvalue\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"Escrow.sol\":2525:2565  escrow.totalAmount += uint128(msg.value) */\n      swap3\n      dup4\n      and\n      dup2\n      add\n      swap1\n      swap3\n      and\n      or\n      dup3\n      sstore\n        /* \"Escrow.sol\":2614:2629  escrow.isActive */\n      0x02\n      dup3\n      add\n        /* \"Escrow.sol\":2614:2636  escrow.isActive = true */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      not(shl(0xa0, 0xff))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"Escrow.sol\":2677:2733  TokensStored(storeHash, msg.sender, identity, msg.value) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3596:3621   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":3652:3654   */\n      0x20\n        /* \"#utility.yul\":3637:3655   */\n      dup2\n      add\n        /* \"#utility.yul\":3630:3664   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"Escrow.sol\":2701:2711  msg.sender */\n      caller\n      swap2\n        /* \"Escrow.sol\":2690:2699  storeHash */\n      dup6\n      swap2\n        /* \"Escrow.sol\":2677:2733  TokensStored(storeHash, msg.sender, identity, msg.value) */\n      0x47b2a1127ea8251f2643fef19daa05415bd86a2c7083f46f0ec1fd083e4a8a64\n      swap2\n        /* \"#utility.yul\":3569:3587   */\n      add\n        /* \"Escrow.sol\":2677:2733  TokensStored(storeHash, msg.sender, identity, msg.value) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Escrow.sol\":1754:2741  {... */\n      pop\n        /* \"Escrow.sol\":1679:2741  function storeTokens(bytes32 storeHash, bytes32 identity) external payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Escrow.sol\":2938:3645  function releaseFunds(bytes32 storeHash, address winner) external nonReentrant {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_54\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_55\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_54:\n        /* \"Escrow.sol\":3028:3050  Storage storage escrow */\n      0x00\n        /* \"Escrow.sol\":3053:3077  escrowStorage[storeHash] */\n      dup3\n      dup2\n      mstore\n        /* \"Escrow.sol\":3053:3066  escrowStorage */\n      0x01\n        /* \"Escrow.sol\":3053:3077  escrowStorage[storeHash] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Escrow.sol\":3117:3132  escrow.isActive */\n      0x02\n      dup2\n      add\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"Escrow.sol\":3109:3157  require(escrow.isActive, \"Escrow is not active\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3877:3879   */\n      0x20\n        /* \"Escrow.sol\":3109:3157  require(escrow.isActive, \"Escrow is not active\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3859:3880   */\n      mstore\n        /* \"#utility.yul\":3916:3918   */\n      0x14\n        /* \"#utility.yul\":3896:3914   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3889:3919   */\n      mstore\n      shl(0x60, 0x457363726f77206973206e6f7420616374697665)\n        /* \"#utility.yul\":3935:3953   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3928:3978   */\n      mstore\n        /* \"#utility.yul\":3995:4013   */\n      0x64\n      add\n        /* \"Escrow.sol\":3109:3157  require(escrow.isActive, \"Escrow is not active\") */\n      tag_34\n        /* \"#utility.yul\":3675:4019   */\n      jump\n        /* \"Escrow.sol\":3109:3157  require(escrow.isActive, \"Escrow is not active\") */\n    tag_57:\n        /* \"Escrow.sol\":3176:3189  escrow.player */\n      0x01\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Escrow.sol\":3176:3199  escrow.player == winner */\n      dup4\n      dup2\n      and\n        /* \"Escrow.sol\":3176:3189  escrow.player */\n      swap2\n      and\n        /* \"Escrow.sol\":3176:3199  escrow.player == winner */\n      eq\n      dup1\n        /* \"Escrow.sol\":3176:3230  escrow.player == winner || escrow.challenger == winner */\n      tag_60\n      jumpi\n      pop\n        /* \"Escrow.sol\":3203:3220  escrow.challenger */\n      0x02\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Escrow.sol\":3203:3230  escrow.challenger == winner */\n      dup4\n      dup2\n      and\n        /* \"Escrow.sol\":3203:3220  escrow.challenger */\n      swap2\n      and\n        /* \"Escrow.sol\":3203:3230  escrow.challenger == winner */\n      eq\n        /* \"Escrow.sol\":3176:3230  escrow.player == winner || escrow.challenger == winner */\n    tag_60:\n        /* \"Escrow.sol\":3168:3249  require(escrow.player == winner || escrow.challenger == winner, \"Invalid winner\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4226:4228   */\n      0x20\n        /* \"Escrow.sol\":3168:3249  require(escrow.player == winner || escrow.challenger == winner, \"Invalid winner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4208:4229   */\n      mstore\n        /* \"#utility.yul\":4265:4267   */\n      0x0e\n        /* \"#utility.yul\":4245:4263   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4238:4268   */\n      mstore\n      shl(0x91, 0x24b73b30b634b2103bb4b73732b9)\n        /* \"#utility.yul\":4284:4302   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4277:4321   */\n      mstore\n        /* \"#utility.yul\":4338:4356   */\n      0x64\n      add\n        /* \"Escrow.sol\":3168:3249  require(escrow.player == winner || escrow.challenger == winner, \"Invalid winner\") */\n      tag_34\n        /* \"#utility.yul\":4024:4362   */\n      jump\n        /* \"Escrow.sol\":3168:3249  require(escrow.player == winner || escrow.challenger == winner, \"Invalid winner\") */\n    tag_61:\n        /* \"Escrow.sol\":3268:3286  escrow.totalAmount */\n      dup1\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      and\n        /* \"Escrow.sol\":3260:3314  require(escrow.totalAmount > 0, \"No funds to release\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4569:4571   */\n      0x20\n        /* \"Escrow.sol\":3260:3314  require(escrow.totalAmount > 0, \"No funds to release\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4551:4572   */\n      mstore\n        /* \"#utility.yul\":4608:4610   */\n      0x13\n        /* \"#utility.yul\":4588:4606   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4581:4611   */\n      mstore\n      shl(0x68, 0x4e6f2066756e647320746f2072656c65617365)\n        /* \"#utility.yul\":4627:4645   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4620:4669   */\n      mstore\n        /* \"#utility.yul\":4686:4704   */\n      0x64\n      add\n        /* \"Escrow.sol\":3260:3314  require(escrow.totalAmount > 0, \"No funds to release\") */\n      tag_34\n        /* \"#utility.yul\":4367:4710   */\n      jump\n        /* \"Escrow.sol\":3260:3314  require(escrow.totalAmount > 0, \"No funds to release\") */\n    tag_64:\n        /* \"Escrow.sol\":3361:3379  escrow.totalAmount */\n      dup1\n      sload\n      not(sub(shl(0x80, 0x01), 0x01))\n        /* \"Escrow.sol\":3390:3412  escrow.totalAmount = 0 */\n      dup2\n      and\n      dup3\n      sstore\n        /* \"Escrow.sol\":3423:3438  escrow.isActive */\n      0x02\n      dup3\n      add\n        /* \"Escrow.sol\":3423:3446  escrow.isActive = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"Escrow.sol\":3489:3529  ReleasedFunds(storeHash, amount, winner) */\n      mload(0x40)\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"Escrow.sol\":3361:3379  escrow.totalAmount */\n      swap1\n      swap2\n      and\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Escrow.sol\":3489:3529  ReleasedFunds(storeHash, amount, winner) */\n      dup5\n      and\n      swap1\n        /* \"Escrow.sol\":3361:3379  escrow.totalAmount */\n      dup3\n      swap1\n        /* \"Escrow.sol\":3503:3512  storeHash */\n      dup7\n      swap1\n        /* \"Escrow.sol\":3489:3529  ReleasedFunds(storeHash, amount, winner) */\n      0xa20198858d673ac3cf5d6f62c85cb502c39af8269735c0ef6774aff58154a429\n      swap1\n        /* \"Escrow.sol\":3347:3358  uint amount */\n      0x00\n      swap1\n        /* \"Escrow.sol\":3489:3529  ReleasedFunds(storeHash, amount, winner) */\n      log4\n        /* \"Escrow.sol\":3543:3555  bool success */\n      0x00\n        /* \"Escrow.sol\":3561:3567  winner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Escrow.sol\":3561:3572  winner.call */\n      and\n        /* \"Escrow.sol\":3580:3586  amount */\n      dup3\n        /* \"Escrow.sol\":3561:3591  winner.call{value: amount}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_71\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_70)\n    tag_71:\n      0x60\n      swap2\n      pop\n    tag_70:\n      pop\n        /* \"Escrow.sol\":3542:3591  (bool success, ) = winner.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"Escrow.sol\":3610:3617  success */\n      dup1\n        /* \"Escrow.sol\":3602:3637  require(success, \"Transfer failed\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5127:5129   */\n      0x20\n        /* \"Escrow.sol\":3602:3637  require(success, \"Transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5109:5130   */\n      mstore\n        /* \"#utility.yul\":5166:5168   */\n      0x0f\n        /* \"#utility.yul\":5146:5164   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5139:5169   */\n      mstore\n      shl(0x8a, 0x151c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":5185:5203   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5178:5223   */\n      mstore\n        /* \"#utility.yul\":5240:5258   */\n      0x64\n      add\n        /* \"Escrow.sol\":3602:3637  require(success, \"Transfer failed\") */\n      tag_34\n        /* \"#utility.yul\":4925:5264   */\n      jump\n        /* \"Escrow.sol\":3602:3637  require(success, \"Transfer failed\") */\n    tag_72:\n        /* \"Escrow.sol\":3017:3645  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_75\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_75:\n        /* \"Escrow.sol\":2938:3645  function releaseFunds(bytes32 storeHash, address winner) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5471:5473   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5453:5474   */\n      mstore\n        /* \"#utility.yul\":5510:5512   */\n      0x1f\n        /* \"#utility.yul\":5490:5508   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5483:5513   */\n      mstore\n        /* \"#utility.yul\":5549:5582   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":5529:5547   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5522:5583   */\n      mstore\n        /* \"#utility.yul\":5600:5618   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_34\n        /* \"#utility.yul\":5269:5624   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_78:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"#utility.yul\":196:542   */\n    tag_14:\n        /* \"#utility.yul\":264:270   */\n      0x00\n        /* \"#utility.yul\":272:278   */\n      dup1\n        /* \"#utility.yul\":325:327   */\n      0x40\n        /* \"#utility.yul\":313:322   */\n      dup4\n        /* \"#utility.yul\":304:311   */\n      dup6\n        /* \"#utility.yul\":300:323   */\n      sub\n        /* \"#utility.yul\":296:328   */\n      slt\n        /* \"#utility.yul\":293:345   */\n      iszero\n      tag_85\n      jumpi\n        /* \"#utility.yul\":341:342   */\n      0x00\n        /* \"#utility.yul\":338:339   */\n      dup1\n        /* \"#utility.yul\":331:343   */\n      revert\n        /* \"#utility.yul\":293:345   */\n    tag_85:\n      pop\n      pop\n        /* \"#utility.yul\":386:409   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":506:508   */\n      0x20\n        /* \"#utility.yul\":491:509   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":478:510   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":196:542   */\n      jump\t// out\n        /* \"#utility.yul\":547:955   */\n    tag_23:\n        /* \"#utility.yul\":615:621   */\n      0x00\n        /* \"#utility.yul\":623:629   */\n      dup1\n        /* \"#utility.yul\":676:678   */\n      0x40\n        /* \"#utility.yul\":664:673   */\n      dup4\n        /* \"#utility.yul\":655:662   */\n      dup6\n        /* \"#utility.yul\":651:674   */\n      sub\n        /* \"#utility.yul\":647:679   */\n      slt\n        /* \"#utility.yul\":644:696   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":692:693   */\n      0x00\n        /* \"#utility.yul\":689:690   */\n      dup1\n        /* \"#utility.yul\":682:694   */\n      revert\n        /* \"#utility.yul\":644:696   */\n    tag_87:\n        /* \"#utility.yul\":737:760   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":836:838   */\n      0x20\n        /* \"#utility.yul\":821:839   */\n      dup4\n      add\n        /* \"#utility.yul\":808:840   */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":871:904   */\n      dup2\n      and\n        /* \"#utility.yul\":859:905   */\n      dup2\n      eq\n        /* \"#utility.yul\":849:923   */\n      tag_88\n      jumpi\n        /* \"#utility.yul\":919:920   */\n      0x00\n        /* \"#utility.yul\":916:917   */\n      dup1\n        /* \"#utility.yul\":909:921   */\n      revert\n        /* \"#utility.yul\":849:923   */\n    tag_88:\n        /* \"#utility.yul\":942:949   */\n      dup1\n        /* \"#utility.yul\":932:949   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":547:955   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":960:1186   */\n    tag_28:\n        /* \"#utility.yul\":1019:1025   */\n      0x00\n        /* \"#utility.yul\":1072:1074   */\n      0x20\n        /* \"#utility.yul\":1060:1069   */\n      dup3\n        /* \"#utility.yul\":1051:1058   */\n      dup5\n        /* \"#utility.yul\":1047:1070   */\n      sub\n        /* \"#utility.yul\":1043:1075   */\n      slt\n        /* \"#utility.yul\":1040:1092   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":1088:1089   */\n      0x00\n        /* \"#utility.yul\":1085:1086   */\n      dup1\n        /* \"#utility.yul\":1078:1090   */\n      revert\n        /* \"#utility.yul\":1040:1092   */\n    tag_90:\n      pop\n        /* \"#utility.yul\":1133:1156   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":960:1186   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bf5416a95bb6fb7250297f4fcf97e8861e54bfb76100a560e015cde3a04a70b664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5060015f5561074b806100205f395ff3fe608060405260043610610049575f3560e01c806316c30ebc1461004d5780632fa0b49f14610093578063530adbb4146100a85780637d25e89d146100db578063a0946f92146100fa575b5f80fd5b348015610058575f80fd5b506100807f326d994cdb81aaccb84aa1f62bae636dc0aaf98ab22f66b0c9224f1edccd7cc981565b6040519081526020015b60405180910390f35b6100a66100a13660046106a5565b610191565b005b3480156100b3575f80fd5b506100807fae8b6f0f354448b9bed217dcbb6effc6cc52560477cd31206503fbd937f7a37881565b3480156100e6575f80fd5b506100a66100f53660046106c5565b61042e565b348015610105575f80fd5b506101586101143660046106fe565b600160208190525f91825260409091208054918101546002909101546001600160801b03909216916001600160a01b0391821691811690600160a01b900460ff1684565b604080516001600160801b039590951685526001600160a01b03938416602086015291909216908301521515606082015260800161008a565b5f34116101d75760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a590819195c1bdcda5d608a1b60448201526064015b60405180910390fd5b7f326d994cdb81aaccb84aa1f62bae636dc0aaf98ab22f66b0c9224f1edccd7cc981148061022457507fae8b6f0f354448b9bed217dcbb6effc6cc52560477cd31206503fbd937f7a37881145b6102635760405162461bcd60e51b815260206004820152601060248201526f496e76616c6964206964656e7469747960801b60448201526064016101ce565b6001600160801b033411156102ad5760405162461bcd60e51b815260206004820152601060248201526f416d6f756e7420746f6f206c6172676560801b60448201526064016101ce565b5f8281526001602052604090207fcd9266b3247e553347b55e09d4519c923f5506754dd0994f36ddb0e123328337820161034a5760018101546001600160a01b0316156103315760405162461bcd60e51b8152602060048201526012602482015271141b185e595c88185b1c9958591e481cd95d60721b60448201526064016101ce565b6001810180546001600160a01b031916331790556103b3565b60028101546001600160a01b03161561039e5760405162461bcd60e51b815260206004820152601660248201527510da185b1b195b99d95c88185b1c9958591e481cd95d60521b60448201526064016101ce565b6002810180546001600160a01b031916331790555b80546001600160801b03198116346001600160801b039283168101909216178255600282018054600160a01b60ff60a01b19909116179055604080518481526020810192909252339185917f47b2a1127ea8251f2643fef19daa05415bd86a2c7083f46f0ec1fd083e4a8a64910160405180910390a3505050565b61043661064e565b5f8281526001602052604090206002810154600160a01b900460ff166104955760405162461bcd60e51b8152602060048201526014602482015273457363726f77206973206e6f742061637469766560601b60448201526064016101ce565b60018101546001600160a01b03838116911614806104c2575060028101546001600160a01b038381169116145b6104ff5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b2103bb4b73732b960911b60448201526064016101ce565b80546001600160801b031661054c5760405162461bcd60e51b81526020600482015260136024820152724e6f2066756e647320746f2072656c6561736560681b60448201526064016101ce565b80546001600160801b03198116825560028201805460ff60a01b191690556040516001600160801b03909116906001600160a01b03841690829086907fa20198858d673ac3cf5d6f62c85cb502c39af8269735c0ef6774aff58154a429905f90a45f836001600160a01b0316826040515f6040518083038185875af1925050503d805f81146105f6576040519150601f19603f3d011682016040523d82523d5f602084013e6105fb565b606091505b505090508061063e5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064016101ce565b50505061064a60015f55565b5050565b60025f540361069f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101ce565b60025f55565b5f80604083850312156106b6575f80fd5b50508035926020909101359150565b5f80604083850312156106d6575f80fd5b8235915060208301356001600160a01b03811681146106f3575f80fd5b809150509250929050565b5f6020828403121561070e575f80fd5b503591905056fea2646970667358221220bf5416a95bb6fb7250297f4fcf97e8861e54bfb76100a560e015cde3a04a70b664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH0 SSTORE PUSH2 0x74B DUP1 PUSH2 0x20 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x49 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16C30EBC EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0x2FA0B49F EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x530ADBB4 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x7D25E89D EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xA0946F92 EQ PUSH2 0xFA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x80 PUSH32 0x326D994CDB81AACCB84AA1F62BAE636DC0AAF98AB22F66B0C9224F1EDCCD7CC9 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH2 0xA1 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A5 JUMP JUMPDEST PUSH2 0x191 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x80 PUSH32 0xAE8B6F0F354448B9BED217DCBB6EFFC6CC52560477CD31206503FBD937F7A378 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA6 PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x6C5 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x105 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP2 SWAP1 SWAP3 AND SWAP1 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x8A JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x1D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x125B9D985B1A590819195C1BDCDA5D PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x326D994CDB81AACCB84AA1F62BAE636DC0AAF98AB22F66B0C9224F1EDCCD7CC9 DUP2 EQ DUP1 PUSH2 0x224 JUMPI POP PUSH32 0xAE8B6F0F354448B9BED217DCBB6EFFC6CC52560477CD31206503FBD937F7A378 DUP2 EQ JUMPDEST PUSH2 0x263 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C6964206964656E74697479 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB CALLVALUE GT ISZERO PUSH2 0x2AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x416D6F756E7420746F6F206C61726765 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CE JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH32 0xCD9266B3247E553347B55E09D4519C923F5506754DD0994F36DDB0E123328337 DUP3 ADD PUSH2 0x34A JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x331 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x141B185E595C88185B1C9958591E481CD95D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x39E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x10DA185B1B195B99D95C88185B1C9958591E481CD95D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP2 AND CALLVALUE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 DUP4 AND DUP2 ADD SWAP1 SWAP3 AND OR DUP3 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER SWAP2 DUP6 SWAP2 PUSH32 0x47B2A1127EA8251F2643FEF19DAA05415BD86A2C7083F46F0EC1FD083E4A8A64 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x436 PUSH2 0x64E JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x457363726F77206973206E6F7420616374697665 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x4C2 JUMPI POP PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x4FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x24B73B30B634B2103BB4B73732B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F2066756E647320746F2072656C65617365 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH32 0xA20198858D673AC3CF5D6F62C85CB502C39AF8269735C0EF6774AFF58154A429 SWAP1 PUSH0 SWAP1 LOG4 PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CE JUMP JUMPDEST POP POP POP PUSH2 0x64A PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x69F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x70E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SLOAD AND 0xA9 JUMPDEST 0xB6 0xFB PUSH19 0x50297F4FCF97E8861E54BFB76100A560E015CD 0xE3 LOG0 BLOBBASEFEE PUSH17 0xB664736F6C634300081A00330000000000 ",
							"sourceMap": "247:3401:1:-:0;;;;;;;;;;;;-1:-1:-1;1716:1:0;1821:7;:22;247:3401:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CHALLENGER_ROLE_81": {
									"entryPoint": null,
									"id": 81,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PLAYER_ROLE_76": {
									"entryPoint": null,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantAfter_52": {
									"entryPoint": null,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_44": {
									"entryPoint": 1614,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@escrowStorage_95": {
									"entryPoint": null,
									"id": 95,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@releaseFunds_312": {
									"entryPoint": 1070,
									"id": 312,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@storeTokens_230": {
									"entryPoint": 401,
									"id": 230,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 1790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 1733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32t_bytes32": {
									"entryPoint": 1701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0b86fa13ce55eac850d7e3b6c12f646468ec18db6145892a7242758249f98fc8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2834909f9e792c71d94c73eec0d7f12b2dae20e3964e6808f416aa7bea29e363__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3d7af5be9aab3888d31c7efc542660ce3d6e5f4d8ab5243a715829c1b29a0c28__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_979a3de985022509ab207243cef88c77e8cce3c574fa2744b0ab3918ad9ec6db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baf6121af5fd524695b1cd155075988c4212e23b4095a08f18b3a699c30a8f4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e6eb06e06fcd0d0a7f69348337b3636931e73e95050a7b6d99dfd506e270dd7c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f151c425a5d22f820fee196faae214ebc444adc8c5af4915889ed2f5c59754f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint128_t_address_t_address_t_bool__to_t_uint128_t_address_t_address_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5626:2",
										"nodeType": "YulBlock",
										"src": "0:5626:2",
										"statements": [
											{
												"nativeSrc": "6:3:2",
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:2",
													"nodeType": "YulBlock",
													"src": "115:76:2",
													"statements": [
														{
															"nativeSrc": "125:26:2",
															"nodeType": "YulAssignment",
															"src": "125:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:2",
																		"nodeType": "YulLiteral",
																		"src": "148:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:2"
																},
																"nativeSrc": "133:18:2",
																"nodeType": "YulFunctionCall",
																"src": "133:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:2"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:2"
																},
																"nativeSrc": "160:25:2",
																"nodeType": "YulFunctionCall",
																"src": "160:25:2"
															},
															"nativeSrc": "160:25:2",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "14:177:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:2",
														"nodeType": "YulTypedName",
														"src": "84:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:2",
														"nodeType": "YulTypedName",
														"src": "95:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:2",
														"nodeType": "YulTypedName",
														"src": "106:4:2",
														"type": ""
													}
												],
												"src": "14:177:2"
											},
											{
												"body": {
													"nativeSrc": "283:259:2",
													"nodeType": "YulBlock",
													"src": "283:259:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "329:16:2",
																"nodeType": "YulBlock",
																"src": "329:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "338:1:2",
																					"nodeType": "YulLiteral",
																					"src": "338:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "341:1:2",
																					"nodeType": "YulLiteral",
																					"src": "341:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "331:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "331:6:2"
																			},
																			"nativeSrc": "331:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "331:12:2"
																		},
																		"nativeSrc": "331:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "331:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "304:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "304:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "313:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "313:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "300:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "300:3:2"
																		},
																		"nativeSrc": "300:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "300:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "325:2:2",
																		"nodeType": "YulLiteral",
																		"src": "325:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "296:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "296:3:2"
																},
																"nativeSrc": "296:32:2",
																"nodeType": "YulFunctionCall",
																"src": "296:32:2"
															},
															"nativeSrc": "293:52:2",
															"nodeType": "YulIf",
															"src": "293:52:2"
														},
														{
															"nativeSrc": "354:14:2",
															"nodeType": "YulVariableDeclaration",
															"src": "354:14:2",
															"value": {
																"kind": "number",
																"nativeSrc": "367:1:2",
																"nodeType": "YulLiteral",
																"src": "367:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "358:5:2",
																	"nodeType": "YulTypedName",
																	"src": "358:5:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "377:32:2",
															"nodeType": "YulAssignment",
															"src": "377:32:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "399:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "399:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "386:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "386:12:2"
																},
																"nativeSrc": "386:23:2",
																"nodeType": "YulFunctionCall",
																"src": "386:23:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "377:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "377:5:2"
																}
															]
														},
														{
															"nativeSrc": "418:15:2",
															"nodeType": "YulAssignment",
															"src": "418:15:2",
															"value": {
																"name": "value",
																"nativeSrc": "428:5:2",
																"nodeType": "YulIdentifier",
																"src": "428:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "418:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "418:6:2"
																}
															]
														},
														{
															"nativeSrc": "442:16:2",
															"nodeType": "YulVariableDeclaration",
															"src": "442:16:2",
															"value": {
																"kind": "number",
																"nativeSrc": "457:1:2",
																"nodeType": "YulLiteral",
																"src": "457:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "446:7:2",
																	"nodeType": "YulTypedName",
																	"src": "446:7:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "467:43:2",
															"nodeType": "YulAssignment",
															"src": "467:43:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "495:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "495:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "506:2:2",
																				"nodeType": "YulLiteral",
																				"src": "506:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "491:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "491:3:2"
																		},
																		"nativeSrc": "491:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "491:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "478:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "478:12:2"
																},
																"nativeSrc": "478:32:2",
																"nodeType": "YulFunctionCall",
																"src": "478:32:2"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "467:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "467:7:2"
																}
															]
														},
														{
															"nativeSrc": "519:17:2",
															"nodeType": "YulAssignment",
															"src": "519:17:2",
															"value": {
																"name": "value_1",
																"nativeSrc": "529:7:2",
																"nodeType": "YulIdentifier",
																"src": "529:7:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "519:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "519:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_bytes32",
												"nativeSrc": "196:346:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "241:9:2",
														"nodeType": "YulTypedName",
														"src": "241:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "252:7:2",
														"nodeType": "YulTypedName",
														"src": "252:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "264:6:2",
														"nodeType": "YulTypedName",
														"src": "264:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "272:6:2",
														"nodeType": "YulTypedName",
														"src": "272:6:2",
														"type": ""
													}
												],
												"src": "196:346:2"
											},
											{
												"body": {
													"nativeSrc": "634:321:2",
													"nodeType": "YulBlock",
													"src": "634:321:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "680:16:2",
																"nodeType": "YulBlock",
																"src": "680:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "689:1:2",
																					"nodeType": "YulLiteral",
																					"src": "689:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "692:1:2",
																					"nodeType": "YulLiteral",
																					"src": "692:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "682:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "682:6:2"
																			},
																			"nativeSrc": "682:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "682:12:2"
																		},
																		"nativeSrc": "682:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "682:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "655:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "655:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "664:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "664:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "651:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "651:3:2"
																		},
																		"nativeSrc": "651:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "651:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "676:2:2",
																		"nodeType": "YulLiteral",
																		"src": "676:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "647:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "647:3:2"
																},
																"nativeSrc": "647:32:2",
																"nodeType": "YulFunctionCall",
																"src": "647:32:2"
															},
															"nativeSrc": "644:52:2",
															"nodeType": "YulIf",
															"src": "644:52:2"
														},
														{
															"nativeSrc": "705:14:2",
															"nodeType": "YulVariableDeclaration",
															"src": "705:14:2",
															"value": {
																"kind": "number",
																"nativeSrc": "718:1:2",
																"nodeType": "YulLiteral",
																"src": "718:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "709:5:2",
																	"nodeType": "YulTypedName",
																	"src": "709:5:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "728:32:2",
															"nodeType": "YulAssignment",
															"src": "728:32:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "750:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "750:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "737:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "737:12:2"
																},
																"nativeSrc": "737:23:2",
																"nodeType": "YulFunctionCall",
																"src": "737:23:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "728:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "728:5:2"
																}
															]
														},
														{
															"nativeSrc": "769:15:2",
															"nodeType": "YulAssignment",
															"src": "769:15:2",
															"value": {
																"name": "value",
																"nativeSrc": "779:5:2",
																"nodeType": "YulIdentifier",
																"src": "779:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "769:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "769:6:2"
																}
															]
														},
														{
															"nativeSrc": "793:47:2",
															"nodeType": "YulVariableDeclaration",
															"src": "793:47:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "825:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "825:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "836:2:2",
																				"nodeType": "YulLiteral",
																				"src": "836:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "821:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "821:3:2"
																		},
																		"nativeSrc": "821:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "821:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "808:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "808:12:2"
																},
																"nativeSrc": "808:32:2",
																"nodeType": "YulFunctionCall",
																"src": "808:32:2"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "797:7:2",
																	"nodeType": "YulTypedName",
																	"src": "797:7:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "907:16:2",
																"nodeType": "YulBlock",
																"src": "907:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "916:1:2",
																					"nodeType": "YulLiteral",
																					"src": "916:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "919:1:2",
																					"nodeType": "YulLiteral",
																					"src": "919:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "909:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "909:6:2"
																			},
																			"nativeSrc": "909:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "909:12:2"
																		},
																		"nativeSrc": "909:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "909:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "862:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "862:7:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_1",
																						"nativeSrc": "875:7:2",
																						"nodeType": "YulIdentifier",
																						"src": "875:7:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "892:3:2",
																										"nodeType": "YulLiteral",
																										"src": "892:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "897:1:2",
																										"nodeType": "YulLiteral",
																										"src": "897:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "888:3:2",
																									"nodeType": "YulIdentifier",
																									"src": "888:3:2"
																								},
																								"nativeSrc": "888:11:2",
																								"nodeType": "YulFunctionCall",
																								"src": "888:11:2"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "901:1:2",
																								"nodeType": "YulLiteral",
																								"src": "901:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "884:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "884:3:2"
																						},
																						"nativeSrc": "884:19:2",
																						"nodeType": "YulFunctionCall",
																						"src": "884:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "871:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "871:3:2"
																				},
																				"nativeSrc": "871:33:2",
																				"nodeType": "YulFunctionCall",
																				"src": "871:33:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "859:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "859:2:2"
																		},
																		"nativeSrc": "859:46:2",
																		"nodeType": "YulFunctionCall",
																		"src": "859:46:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "852:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "852:6:2"
																},
																"nativeSrc": "852:54:2",
																"nodeType": "YulFunctionCall",
																"src": "852:54:2"
															},
															"nativeSrc": "849:74:2",
															"nodeType": "YulIf",
															"src": "849:74:2"
														},
														{
															"nativeSrc": "932:17:2",
															"nodeType": "YulAssignment",
															"src": "932:17:2",
															"value": {
																"name": "value_1",
																"nativeSrc": "942:7:2",
																"nodeType": "YulIdentifier",
																"src": "942:7:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "932:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "932:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "547:408:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "592:9:2",
														"nodeType": "YulTypedName",
														"src": "592:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "603:7:2",
														"nodeType": "YulTypedName",
														"src": "603:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "615:6:2",
														"nodeType": "YulTypedName",
														"src": "615:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "623:6:2",
														"nodeType": "YulTypedName",
														"src": "623:6:2",
														"type": ""
													}
												],
												"src": "547:408:2"
											},
											{
												"body": {
													"nativeSrc": "1030:156:2",
													"nodeType": "YulBlock",
													"src": "1030:156:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1076:16:2",
																"nodeType": "YulBlock",
																"src": "1076:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1085:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1085:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1088:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1088:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1078:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1078:6:2"
																			},
																			"nativeSrc": "1078:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1078:12:2"
																		},
																		"nativeSrc": "1078:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1078:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1051:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1051:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1060:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1060:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1047:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1047:3:2"
																		},
																		"nativeSrc": "1047:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1047:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1072:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1072:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1043:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1043:3:2"
																},
																"nativeSrc": "1043:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1043:32:2"
															},
															"nativeSrc": "1040:52:2",
															"nodeType": "YulIf",
															"src": "1040:52:2"
														},
														{
															"nativeSrc": "1101:14:2",
															"nodeType": "YulVariableDeclaration",
															"src": "1101:14:2",
															"value": {
																"kind": "number",
																"nativeSrc": "1114:1:2",
																"nodeType": "YulLiteral",
																"src": "1114:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1105:5:2",
																	"nodeType": "YulTypedName",
																	"src": "1105:5:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1124:32:2",
															"nodeType": "YulAssignment",
															"src": "1124:32:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1146:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1146:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1133:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "1133:12:2"
																},
																"nativeSrc": "1133:23:2",
																"nodeType": "YulFunctionCall",
																"src": "1133:23:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1124:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1124:5:2"
																}
															]
														},
														{
															"nativeSrc": "1165:15:2",
															"nodeType": "YulAssignment",
															"src": "1165:15:2",
															"value": {
																"name": "value",
																"nativeSrc": "1175:5:2",
																"nodeType": "YulIdentifier",
																"src": "1175:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1165:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1165:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "960:226:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "996:9:2",
														"nodeType": "YulTypedName",
														"src": "996:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1007:7:2",
														"nodeType": "YulTypedName",
														"src": "1007:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1019:6:2",
														"nodeType": "YulTypedName",
														"src": "1019:6:2",
														"type": ""
													}
												],
												"src": "960:226:2"
											},
											{
												"body": {
													"nativeSrc": "1370:315:2",
													"nodeType": "YulBlock",
													"src": "1370:315:2",
													"statements": [
														{
															"nativeSrc": "1380:27:2",
															"nodeType": "YulAssignment",
															"src": "1380:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1392:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1392:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1403:3:2",
																		"nodeType": "YulLiteral",
																		"src": "1403:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1388:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1388:3:2"
																},
																"nativeSrc": "1388:19:2",
																"nodeType": "YulFunctionCall",
																"src": "1388:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1380:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1380:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1423:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1423:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1438:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1438:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1446:34:2",
																				"nodeType": "YulLiteral",
																				"src": "1446:34:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1434:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1434:3:2"
																		},
																		"nativeSrc": "1434:47:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1434:47:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1416:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1416:6:2"
																},
																"nativeSrc": "1416:66:2",
																"nodeType": "YulFunctionCall",
																"src": "1416:66:2"
															},
															"nativeSrc": "1416:66:2",
															"nodeType": "YulExpressionStatement",
															"src": "1416:66:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1502:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1502:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1513:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1513:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1498:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1498:3:2"
																		},
																		"nativeSrc": "1498:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1498:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "1522:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1522:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1538:3:2",
																								"nodeType": "YulLiteral",
																								"src": "1538:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1543:1:2",
																								"nodeType": "YulLiteral",
																								"src": "1543:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1534:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "1534:3:2"
																						},
																						"nativeSrc": "1534:11:2",
																						"nodeType": "YulFunctionCall",
																						"src": "1534:11:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1547:1:2",
																						"nodeType": "YulLiteral",
																						"src": "1547:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1530:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1530:3:2"
																				},
																				"nativeSrc": "1530:19:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1530:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1518:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1518:3:2"
																		},
																		"nativeSrc": "1518:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1518:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1491:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:2"
																},
																"nativeSrc": "1491:60:2",
																"nodeType": "YulFunctionCall",
																"src": "1491:60:2"
															},
															"nativeSrc": "1491:60:2",
															"nodeType": "YulExpressionStatement",
															"src": "1491:60:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1571:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1571:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1582:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1582:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1567:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1567:3:2"
																		},
																		"nativeSrc": "1567:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1567:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "1591:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1591:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1607:3:2",
																								"nodeType": "YulLiteral",
																								"src": "1607:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1612:1:2",
																								"nodeType": "YulLiteral",
																								"src": "1612:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1603:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "1603:3:2"
																						},
																						"nativeSrc": "1603:11:2",
																						"nodeType": "YulFunctionCall",
																						"src": "1603:11:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1616:1:2",
																						"nodeType": "YulLiteral",
																						"src": "1616:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1599:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1599:3:2"
																				},
																				"nativeSrc": "1599:19:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1599:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1587:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1587:3:2"
																		},
																		"nativeSrc": "1587:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1587:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1560:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1560:6:2"
																},
																"nativeSrc": "1560:60:2",
																"nodeType": "YulFunctionCall",
																"src": "1560:60:2"
															},
															"nativeSrc": "1560:60:2",
															"nodeType": "YulExpressionStatement",
															"src": "1560:60:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1640:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1651:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1651:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1636:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:2"
																		},
																		"nativeSrc": "1636:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1636:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nativeSrc": "1670:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1670:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1663:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "1663:6:2"
																				},
																				"nativeSrc": "1663:14:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1663:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1656:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1656:6:2"
																		},
																		"nativeSrc": "1656:22:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1656:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1629:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1629:6:2"
																},
																"nativeSrc": "1629:50:2",
																"nodeType": "YulFunctionCall",
																"src": "1629:50:2"
															},
															"nativeSrc": "1629:50:2",
															"nodeType": "YulExpressionStatement",
															"src": "1629:50:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128_t_address_t_address_t_bool__to_t_uint128_t_address_t_address_t_bool__fromStack_reversed",
												"nativeSrc": "1191:494:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1315:9:2",
														"nodeType": "YulTypedName",
														"src": "1315:9:2",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1326:6:2",
														"nodeType": "YulTypedName",
														"src": "1326:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1334:6:2",
														"nodeType": "YulTypedName",
														"src": "1334:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1342:6:2",
														"nodeType": "YulTypedName",
														"src": "1342:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1350:6:2",
														"nodeType": "YulTypedName",
														"src": "1350:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1361:4:2",
														"nodeType": "YulTypedName",
														"src": "1361:4:2",
														"type": ""
													}
												],
												"src": "1191:494:2"
											},
											{
												"body": {
													"nativeSrc": "1864:165:2",
													"nodeType": "YulBlock",
													"src": "1864:165:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1881:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1881:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1892:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1892:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1874:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1874:6:2"
																},
																"nativeSrc": "1874:21:2",
																"nodeType": "YulFunctionCall",
																"src": "1874:21:2"
															},
															"nativeSrc": "1874:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "1874:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1915:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1915:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1926:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1926:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1911:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1911:3:2"
																		},
																		"nativeSrc": "1911:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1911:18:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1931:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1931:2:2",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1904:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1904:6:2"
																},
																"nativeSrc": "1904:30:2",
																"nodeType": "YulFunctionCall",
																"src": "1904:30:2"
															},
															"nativeSrc": "1904:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "1904:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1954:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1954:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1965:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1965:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1950:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1950:3:2"
																		},
																		"nativeSrc": "1950:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1950:18:2"
																	},
																	{
																		"hexValue": "496e76616c6964206465706f736974",
																		"kind": "string",
																		"nativeSrc": "1970:17:2",
																		"nodeType": "YulLiteral",
																		"src": "1970:17:2",
																		"type": "",
																		"value": "Invalid deposit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1943:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1943:6:2"
																},
																"nativeSrc": "1943:45:2",
																"nodeType": "YulFunctionCall",
																"src": "1943:45:2"
															},
															"nativeSrc": "1943:45:2",
															"nodeType": "YulExpressionStatement",
															"src": "1943:45:2"
														},
														{
															"nativeSrc": "1997:26:2",
															"nodeType": "YulAssignment",
															"src": "1997:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2009:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2009:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2020:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2020:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2005:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2005:3:2"
																},
																"nativeSrc": "2005:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2005:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1997:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1997:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3d7af5be9aab3888d31c7efc542660ce3d6e5f4d8ab5243a715829c1b29a0c28__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1690:339:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1841:9:2",
														"nodeType": "YulTypedName",
														"src": "1841:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1855:4:2",
														"nodeType": "YulTypedName",
														"src": "1855:4:2",
														"type": ""
													}
												],
												"src": "1690:339:2"
											},
											{
												"body": {
													"nativeSrc": "2208:166:2",
													"nodeType": "YulBlock",
													"src": "2208:166:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2225:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2225:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2218:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:2"
																},
																"nativeSrc": "2218:21:2",
																"nodeType": "YulFunctionCall",
																"src": "2218:21:2"
															},
															"nativeSrc": "2218:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "2218:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2259:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2259:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2270:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2270:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2255:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:2"
																		},
																		"nativeSrc": "2255:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2255:18:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2275:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2275:2:2",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2248:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2248:6:2"
																},
																"nativeSrc": "2248:30:2",
																"nodeType": "YulFunctionCall",
																"src": "2248:30:2"
															},
															"nativeSrc": "2248:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "2248:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2298:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2298:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2309:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2309:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2294:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:2"
																		},
																		"nativeSrc": "2294:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2294:18:2"
																	},
																	{
																		"hexValue": "496e76616c6964206964656e74697479",
																		"kind": "string",
																		"nativeSrc": "2314:18:2",
																		"nodeType": "YulLiteral",
																		"src": "2314:18:2",
																		"type": "",
																		"value": "Invalid identity"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2287:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2287:6:2"
																},
																"nativeSrc": "2287:46:2",
																"nodeType": "YulFunctionCall",
																"src": "2287:46:2"
															},
															"nativeSrc": "2287:46:2",
															"nodeType": "YulExpressionStatement",
															"src": "2287:46:2"
														},
														{
															"nativeSrc": "2342:26:2",
															"nodeType": "YulAssignment",
															"src": "2342:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2354:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2354:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2365:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2365:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2350:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2350:3:2"
																},
																"nativeSrc": "2350:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2350:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2342:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2342:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0b86fa13ce55eac850d7e3b6c12f646468ec18db6145892a7242758249f98fc8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2034:340:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2185:9:2",
														"nodeType": "YulTypedName",
														"src": "2185:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2199:4:2",
														"nodeType": "YulTypedName",
														"src": "2199:4:2",
														"type": ""
													}
												],
												"src": "2034:340:2"
											},
											{
												"body": {
													"nativeSrc": "2553:166:2",
													"nodeType": "YulBlock",
													"src": "2553:166:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2570:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2570:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2581:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2581:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2563:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2563:6:2"
																},
																"nativeSrc": "2563:21:2",
																"nodeType": "YulFunctionCall",
																"src": "2563:21:2"
															},
															"nativeSrc": "2563:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "2563:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2604:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2604:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2615:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2615:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2600:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2600:3:2"
																		},
																		"nativeSrc": "2600:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2600:18:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2620:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2620:2:2",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2593:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2593:6:2"
																},
																"nativeSrc": "2593:30:2",
																"nodeType": "YulFunctionCall",
																"src": "2593:30:2"
															},
															"nativeSrc": "2593:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "2593:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2643:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2643:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2654:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2654:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2639:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:2"
																		},
																		"nativeSrc": "2639:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:18:2"
																	},
																	{
																		"hexValue": "416d6f756e7420746f6f206c61726765",
																		"kind": "string",
																		"nativeSrc": "2659:18:2",
																		"nodeType": "YulLiteral",
																		"src": "2659:18:2",
																		"type": "",
																		"value": "Amount too large"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2632:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2632:6:2"
																},
																"nativeSrc": "2632:46:2",
																"nodeType": "YulFunctionCall",
																"src": "2632:46:2"
															},
															"nativeSrc": "2632:46:2",
															"nodeType": "YulExpressionStatement",
															"src": "2632:46:2"
														},
														{
															"nativeSrc": "2687:26:2",
															"nodeType": "YulAssignment",
															"src": "2687:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2699:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2699:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2710:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2710:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2695:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2695:3:2"
																},
																"nativeSrc": "2695:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2695:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2687:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2687:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2379:340:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2530:9:2",
														"nodeType": "YulTypedName",
														"src": "2530:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2544:4:2",
														"nodeType": "YulTypedName",
														"src": "2544:4:2",
														"type": ""
													}
												],
												"src": "2379:340:2"
											},
											{
												"body": {
													"nativeSrc": "2898:168:2",
													"nodeType": "YulBlock",
													"src": "2898:168:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2915:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2915:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2926:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2926:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2908:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2908:6:2"
																},
																"nativeSrc": "2908:21:2",
																"nodeType": "YulFunctionCall",
																"src": "2908:21:2"
															},
															"nativeSrc": "2908:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "2908:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2949:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2949:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2960:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2960:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2945:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2945:3:2"
																		},
																		"nativeSrc": "2945:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2945:18:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2965:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2965:2:2",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2938:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2938:6:2"
																},
																"nativeSrc": "2938:30:2",
																"nodeType": "YulFunctionCall",
																"src": "2938:30:2"
															},
															"nativeSrc": "2938:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "2938:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2988:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2988:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2999:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2999:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2984:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2984:3:2"
																		},
																		"nativeSrc": "2984:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2984:18:2"
																	},
																	{
																		"hexValue": "506c6179657220616c726561647920736574",
																		"kind": "string",
																		"nativeSrc": "3004:20:2",
																		"nodeType": "YulLiteral",
																		"src": "3004:20:2",
																		"type": "",
																		"value": "Player already set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2977:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2977:6:2"
																},
																"nativeSrc": "2977:48:2",
																"nodeType": "YulFunctionCall",
																"src": "2977:48:2"
															},
															"nativeSrc": "2977:48:2",
															"nodeType": "YulExpressionStatement",
															"src": "2977:48:2"
														},
														{
															"nativeSrc": "3034:26:2",
															"nodeType": "YulAssignment",
															"src": "3034:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3046:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3046:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3057:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3057:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3042:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3042:3:2"
																},
																"nativeSrc": "3042:18:2",
																"nodeType": "YulFunctionCall",
																"src": "3042:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3034:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3034:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2834909f9e792c71d94c73eec0d7f12b2dae20e3964e6808f416aa7bea29e363__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2724:342:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2875:9:2",
														"nodeType": "YulTypedName",
														"src": "2875:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2889:4:2",
														"nodeType": "YulTypedName",
														"src": "2889:4:2",
														"type": ""
													}
												],
												"src": "2724:342:2"
											},
											{
												"body": {
													"nativeSrc": "3245:172:2",
													"nodeType": "YulBlock",
													"src": "3245:172:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3262:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3262:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3273:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3273:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3255:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3255:6:2"
																},
																"nativeSrc": "3255:21:2",
																"nodeType": "YulFunctionCall",
																"src": "3255:21:2"
															},
															"nativeSrc": "3255:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "3255:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3296:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3296:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3307:2:2",
																				"nodeType": "YulLiteral",
																				"src": "3307:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3292:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3292:3:2"
																		},
																		"nativeSrc": "3292:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3292:18:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3312:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3312:2:2",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3285:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3285:6:2"
																},
																"nativeSrc": "3285:30:2",
																"nodeType": "YulFunctionCall",
																"src": "3285:30:2"
															},
															"nativeSrc": "3285:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "3285:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3335:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3335:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3346:2:2",
																				"nodeType": "YulLiteral",
																				"src": "3346:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3331:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3331:3:2"
																		},
																		"nativeSrc": "3331:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3331:18:2"
																	},
																	{
																		"hexValue": "4368616c6c656e67657220616c726561647920736574",
																		"kind": "string",
																		"nativeSrc": "3351:24:2",
																		"nodeType": "YulLiteral",
																		"src": "3351:24:2",
																		"type": "",
																		"value": "Challenger already set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3324:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3324:6:2"
																},
																"nativeSrc": "3324:52:2",
																"nodeType": "YulFunctionCall",
																"src": "3324:52:2"
															},
															"nativeSrc": "3324:52:2",
															"nodeType": "YulExpressionStatement",
															"src": "3324:52:2"
														},
														{
															"nativeSrc": "3385:26:2",
															"nodeType": "YulAssignment",
															"src": "3385:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3397:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3397:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3408:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3408:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3393:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3393:3:2"
																},
																"nativeSrc": "3393:18:2",
																"nodeType": "YulFunctionCall",
																"src": "3393:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3385:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3385:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f151c425a5d22f820fee196faae214ebc444adc8c5af4915889ed2f5c59754f6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3071:346:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3222:9:2",
														"nodeType": "YulTypedName",
														"src": "3222:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3236:4:2",
														"nodeType": "YulTypedName",
														"src": "3236:4:2",
														"type": ""
													}
												],
												"src": "3071:346:2"
											},
											{
												"body": {
													"nativeSrc": "3551:119:2",
													"nodeType": "YulBlock",
													"src": "3551:119:2",
													"statements": [
														{
															"nativeSrc": "3561:26:2",
															"nodeType": "YulAssignment",
															"src": "3561:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3573:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3573:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3584:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3584:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3569:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3569:3:2"
																},
																"nativeSrc": "3569:18:2",
																"nodeType": "YulFunctionCall",
																"src": "3569:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3561:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3561:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3603:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3603:9:2"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3614:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3614:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3596:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3596:6:2"
																},
																"nativeSrc": "3596:25:2",
																"nodeType": "YulFunctionCall",
																"src": "3596:25:2"
															},
															"nativeSrc": "3596:25:2",
															"nodeType": "YulExpressionStatement",
															"src": "3596:25:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3641:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3641:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3652:2:2",
																				"nodeType": "YulLiteral",
																				"src": "3652:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3637:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3637:3:2"
																		},
																		"nativeSrc": "3637:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3637:18:2"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3657:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3657:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3630:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3630:6:2"
																},
																"nativeSrc": "3630:34:2",
																"nodeType": "YulFunctionCall",
																"src": "3630:34:2"
															},
															"nativeSrc": "3630:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "3630:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed",
												"nativeSrc": "3422:248:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3512:9:2",
														"nodeType": "YulTypedName",
														"src": "3512:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3523:6:2",
														"nodeType": "YulTypedName",
														"src": "3523:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3531:6:2",
														"nodeType": "YulTypedName",
														"src": "3531:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3542:4:2",
														"nodeType": "YulTypedName",
														"src": "3542:4:2",
														"type": ""
													}
												],
												"src": "3422:248:2"
											},
											{
												"body": {
													"nativeSrc": "3849:170:2",
													"nodeType": "YulBlock",
													"src": "3849:170:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3866:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3866:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3877:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3877:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3859:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3859:6:2"
																},
																"nativeSrc": "3859:21:2",
																"nodeType": "YulFunctionCall",
																"src": "3859:21:2"
															},
															"nativeSrc": "3859:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "3859:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3900:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3900:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3911:2:2",
																				"nodeType": "YulLiteral",
																				"src": "3911:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3896:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3896:3:2"
																		},
																		"nativeSrc": "3896:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3896:18:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3916:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3916:2:2",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3889:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3889:6:2"
																},
																"nativeSrc": "3889:30:2",
																"nodeType": "YulFunctionCall",
																"src": "3889:30:2"
															},
															"nativeSrc": "3889:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "3889:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3939:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3939:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3950:2:2",
																				"nodeType": "YulLiteral",
																				"src": "3950:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3935:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3935:3:2"
																		},
																		"nativeSrc": "3935:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3935:18:2"
																	},
																	{
																		"hexValue": "457363726f77206973206e6f7420616374697665",
																		"kind": "string",
																		"nativeSrc": "3955:22:2",
																		"nodeType": "YulLiteral",
																		"src": "3955:22:2",
																		"type": "",
																		"value": "Escrow is not active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3928:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3928:6:2"
																},
																"nativeSrc": "3928:50:2",
																"nodeType": "YulFunctionCall",
																"src": "3928:50:2"
															},
															"nativeSrc": "3928:50:2",
															"nodeType": "YulExpressionStatement",
															"src": "3928:50:2"
														},
														{
															"nativeSrc": "3987:26:2",
															"nodeType": "YulAssignment",
															"src": "3987:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3999:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3999:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4010:2:2",
																		"nodeType": "YulLiteral",
																		"src": "4010:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3995:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3995:3:2"
																},
																"nativeSrc": "3995:18:2",
																"nodeType": "YulFunctionCall",
																"src": "3995:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3987:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3987:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6eb06e06fcd0d0a7f69348337b3636931e73e95050a7b6d99dfd506e270dd7c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3675:344:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3826:9:2",
														"nodeType": "YulTypedName",
														"src": "3826:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3840:4:2",
														"nodeType": "YulTypedName",
														"src": "3840:4:2",
														"type": ""
													}
												],
												"src": "3675:344:2"
											},
											{
												"body": {
													"nativeSrc": "4198:164:2",
													"nodeType": "YulBlock",
													"src": "4198:164:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4215:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "4215:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4226:2:2",
																		"nodeType": "YulLiteral",
																		"src": "4226:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4208:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4208:6:2"
																},
																"nativeSrc": "4208:21:2",
																"nodeType": "YulFunctionCall",
																"src": "4208:21:2"
															},
															"nativeSrc": "4208:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "4208:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4249:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "4249:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4260:2:2",
																				"nodeType": "YulLiteral",
																				"src": "4260:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4245:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4245:3:2"
																		},
																		"nativeSrc": "4245:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4245:18:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4265:2:2",
																		"nodeType": "YulLiteral",
																		"src": "4265:2:2",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4238:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:2"
																},
																"nativeSrc": "4238:30:2",
																"nodeType": "YulFunctionCall",
																"src": "4238:30:2"
															},
															"nativeSrc": "4238:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "4238:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4288:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "4288:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4299:2:2",
																				"nodeType": "YulLiteral",
																				"src": "4299:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4284:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4284:3:2"
																		},
																		"nativeSrc": "4284:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4284:18:2"
																	},
																	{
																		"hexValue": "496e76616c69642077696e6e6572",
																		"kind": "string",
																		"nativeSrc": "4304:16:2",
																		"nodeType": "YulLiteral",
																		"src": "4304:16:2",
																		"type": "",
																		"value": "Invalid winner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4277:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4277:6:2"
																},
																"nativeSrc": "4277:44:2",
																"nodeType": "YulFunctionCall",
																"src": "4277:44:2"
															},
															"nativeSrc": "4277:44:2",
															"nodeType": "YulExpressionStatement",
															"src": "4277:44:2"
														},
														{
															"nativeSrc": "4330:26:2",
															"nodeType": "YulAssignment",
															"src": "4330:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4342:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "4342:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:2",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4338:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4338:3:2"
																},
																"nativeSrc": "4338:18:2",
																"nodeType": "YulFunctionCall",
																"src": "4338:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4330:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "4330:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_979a3de985022509ab207243cef88c77e8cce3c574fa2744b0ab3918ad9ec6db__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4024:338:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4175:9:2",
														"nodeType": "YulTypedName",
														"src": "4175:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4189:4:2",
														"nodeType": "YulTypedName",
														"src": "4189:4:2",
														"type": ""
													}
												],
												"src": "4024:338:2"
											},
											{
												"body": {
													"nativeSrc": "4541:169:2",
													"nodeType": "YulBlock",
													"src": "4541:169:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4558:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "4558:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4569:2:2",
																		"nodeType": "YulLiteral",
																		"src": "4569:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4551:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4551:6:2"
																},
																"nativeSrc": "4551:21:2",
																"nodeType": "YulFunctionCall",
																"src": "4551:21:2"
															},
															"nativeSrc": "4551:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "4551:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4592:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "4592:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4603:2:2",
																				"nodeType": "YulLiteral",
																				"src": "4603:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4588:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4588:3:2"
																		},
																		"nativeSrc": "4588:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4588:18:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4608:2:2",
																		"nodeType": "YulLiteral",
																		"src": "4608:2:2",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4581:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4581:6:2"
																},
																"nativeSrc": "4581:30:2",
																"nodeType": "YulFunctionCall",
																"src": "4581:30:2"
															},
															"nativeSrc": "4581:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "4581:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4631:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "4631:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4642:2:2",
																				"nodeType": "YulLiteral",
																				"src": "4642:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4627:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4627:3:2"
																		},
																		"nativeSrc": "4627:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4627:18:2"
																	},
																	{
																		"hexValue": "4e6f2066756e647320746f2072656c65617365",
																		"kind": "string",
																		"nativeSrc": "4647:21:2",
																		"nodeType": "YulLiteral",
																		"src": "4647:21:2",
																		"type": "",
																		"value": "No funds to release"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4620:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4620:6:2"
																},
																"nativeSrc": "4620:49:2",
																"nodeType": "YulFunctionCall",
																"src": "4620:49:2"
															},
															"nativeSrc": "4620:49:2",
															"nodeType": "YulExpressionStatement",
															"src": "4620:49:2"
														},
														{
															"nativeSrc": "4678:26:2",
															"nodeType": "YulAssignment",
															"src": "4678:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4690:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "4690:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4701:2:2",
																		"nodeType": "YulLiteral",
																		"src": "4701:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4686:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4686:3:2"
																},
																"nativeSrc": "4686:18:2",
																"nodeType": "YulFunctionCall",
																"src": "4686:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4678:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "4678:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baf6121af5fd524695b1cd155075988c4212e23b4095a08f18b3a699c30a8f4b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4367:343:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4518:9:2",
														"nodeType": "YulTypedName",
														"src": "4518:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4532:4:2",
														"nodeType": "YulTypedName",
														"src": "4532:4:2",
														"type": ""
													}
												],
												"src": "4367:343:2"
											},
											{
												"body": {
													"nativeSrc": "4906:14:2",
													"nodeType": "YulBlock",
													"src": "4906:14:2",
													"statements": [
														{
															"nativeSrc": "4908:10:2",
															"nodeType": "YulAssignment",
															"src": "4908:10:2",
															"value": {
																"name": "pos",
																"nativeSrc": "4915:3:2",
																"nodeType": "YulIdentifier",
																"src": "4915:3:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4908:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4908:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "4715:205:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4890:3:2",
														"nodeType": "YulTypedName",
														"src": "4890:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4898:3:2",
														"nodeType": "YulTypedName",
														"src": "4898:3:2",
														"type": ""
													}
												],
												"src": "4715:205:2"
											},
											{
												"body": {
													"nativeSrc": "5099:165:2",
													"nodeType": "YulBlock",
													"src": "5099:165:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5116:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "5116:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5127:2:2",
																		"nodeType": "YulLiteral",
																		"src": "5127:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5109:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "5109:6:2"
																},
																"nativeSrc": "5109:21:2",
																"nodeType": "YulFunctionCall",
																"src": "5109:21:2"
															},
															"nativeSrc": "5109:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "5109:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5150:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "5150:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5161:2:2",
																				"nodeType": "YulLiteral",
																				"src": "5161:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5146:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "5146:3:2"
																		},
																		"nativeSrc": "5146:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "5146:18:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5166:2:2",
																		"nodeType": "YulLiteral",
																		"src": "5166:2:2",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5139:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "5139:6:2"
																},
																"nativeSrc": "5139:30:2",
																"nodeType": "YulFunctionCall",
																"src": "5139:30:2"
															},
															"nativeSrc": "5139:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "5139:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5189:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "5189:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5200:2:2",
																				"nodeType": "YulLiteral",
																				"src": "5200:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5185:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "5185:3:2"
																		},
																		"nativeSrc": "5185:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "5185:18:2"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "5205:17:2",
																		"nodeType": "YulLiteral",
																		"src": "5205:17:2",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5178:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "5178:6:2"
																},
																"nativeSrc": "5178:45:2",
																"nodeType": "YulFunctionCall",
																"src": "5178:45:2"
															},
															"nativeSrc": "5178:45:2",
															"nodeType": "YulExpressionStatement",
															"src": "5178:45:2"
														},
														{
															"nativeSrc": "5232:26:2",
															"nodeType": "YulAssignment",
															"src": "5232:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5244:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "5244:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5255:2:2",
																		"nodeType": "YulLiteral",
																		"src": "5255:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5240:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "5240:3:2"
																},
																"nativeSrc": "5240:18:2",
																"nodeType": "YulFunctionCall",
																"src": "5240:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5232:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "5232:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4925:339:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5076:9:2",
														"nodeType": "YulTypedName",
														"src": "5076:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5090:4:2",
														"nodeType": "YulTypedName",
														"src": "5090:4:2",
														"type": ""
													}
												],
												"src": "4925:339:2"
											},
											{
												"body": {
													"nativeSrc": "5443:181:2",
													"nodeType": "YulBlock",
													"src": "5443:181:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5460:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "5460:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5471:2:2",
																		"nodeType": "YulLiteral",
																		"src": "5471:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5453:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "5453:6:2"
																},
																"nativeSrc": "5453:21:2",
																"nodeType": "YulFunctionCall",
																"src": "5453:21:2"
															},
															"nativeSrc": "5453:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "5453:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5494:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "5494:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5505:2:2",
																				"nodeType": "YulLiteral",
																				"src": "5505:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5490:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "5490:3:2"
																		},
																		"nativeSrc": "5490:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "5490:18:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5510:2:2",
																		"nodeType": "YulLiteral",
																		"src": "5510:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5483:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "5483:6:2"
																},
																"nativeSrc": "5483:30:2",
																"nodeType": "YulFunctionCall",
																"src": "5483:30:2"
															},
															"nativeSrc": "5483:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "5483:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5533:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "5533:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5544:2:2",
																				"nodeType": "YulLiteral",
																				"src": "5544:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5529:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "5529:3:2"
																		},
																		"nativeSrc": "5529:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "5529:18:2"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "5549:33:2",
																		"nodeType": "YulLiteral",
																		"src": "5549:33:2",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5522:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "5522:6:2"
																},
																"nativeSrc": "5522:61:2",
																"nodeType": "YulFunctionCall",
																"src": "5522:61:2"
															},
															"nativeSrc": "5522:61:2",
															"nodeType": "YulExpressionStatement",
															"src": "5522:61:2"
														},
														{
															"nativeSrc": "5592:26:2",
															"nodeType": "YulAssignment",
															"src": "5592:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5604:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "5604:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5615:2:2",
																		"nodeType": "YulLiteral",
																		"src": "5615:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5600:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "5600:3:2"
																},
																"nativeSrc": "5600:18:2",
																"nodeType": "YulFunctionCall",
																"src": "5600:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5592:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "5592:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5269:355:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5420:9:2",
														"nodeType": "YulTypedName",
														"src": "5420:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5434:4:2",
														"nodeType": "YulTypedName",
														"src": "5434:4:2",
														"type": ""
													}
												],
												"src": "5269:355:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint128_t_address_t_address_t_bool__to_t_uint128_t_address_t_address_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_stringliteral_3d7af5be9aab3888d31c7efc542660ce3d6e5f4d8ab5243a715829c1b29a0c28__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid deposit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0b86fa13ce55eac850d7e3b6c12f646468ec18db6145892a7242758249f98fc8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Invalid identity\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Amount too large\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2834909f9e792c71d94c73eec0d7f12b2dae20e3964e6808f416aa7bea29e363__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Player already set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f151c425a5d22f820fee196faae214ebc444adc8c5af4915889ed2f5c59754f6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Challenger already set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_e6eb06e06fcd0d0a7f69348337b3636931e73e95050a7b6d99dfd506e270dd7c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Escrow is not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_979a3de985022509ab207243cef88c77e8cce3c574fa2744b0ab3918ad9ec6db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Invalid winner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baf6121af5fd524695b1cd155075988c4212e23b4095a08f18b3a699c30a8f4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"No funds to release\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610049575f3560e01c806316c30ebc1461004d5780632fa0b49f14610093578063530adbb4146100a85780637d25e89d146100db578063a0946f92146100fa575b5f80fd5b348015610058575f80fd5b506100807f326d994cdb81aaccb84aa1f62bae636dc0aaf98ab22f66b0c9224f1edccd7cc981565b6040519081526020015b60405180910390f35b6100a66100a13660046106a5565b610191565b005b3480156100b3575f80fd5b506100807fae8b6f0f354448b9bed217dcbb6effc6cc52560477cd31206503fbd937f7a37881565b3480156100e6575f80fd5b506100a66100f53660046106c5565b61042e565b348015610105575f80fd5b506101586101143660046106fe565b600160208190525f91825260409091208054918101546002909101546001600160801b03909216916001600160a01b0391821691811690600160a01b900460ff1684565b604080516001600160801b039590951685526001600160a01b03938416602086015291909216908301521515606082015260800161008a565b5f34116101d75760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a590819195c1bdcda5d608a1b60448201526064015b60405180910390fd5b7f326d994cdb81aaccb84aa1f62bae636dc0aaf98ab22f66b0c9224f1edccd7cc981148061022457507fae8b6f0f354448b9bed217dcbb6effc6cc52560477cd31206503fbd937f7a37881145b6102635760405162461bcd60e51b815260206004820152601060248201526f496e76616c6964206964656e7469747960801b60448201526064016101ce565b6001600160801b033411156102ad5760405162461bcd60e51b815260206004820152601060248201526f416d6f756e7420746f6f206c6172676560801b60448201526064016101ce565b5f8281526001602052604090207fcd9266b3247e553347b55e09d4519c923f5506754dd0994f36ddb0e123328337820161034a5760018101546001600160a01b0316156103315760405162461bcd60e51b8152602060048201526012602482015271141b185e595c88185b1c9958591e481cd95d60721b60448201526064016101ce565b6001810180546001600160a01b031916331790556103b3565b60028101546001600160a01b03161561039e5760405162461bcd60e51b815260206004820152601660248201527510da185b1b195b99d95c88185b1c9958591e481cd95d60521b60448201526064016101ce565b6002810180546001600160a01b031916331790555b80546001600160801b03198116346001600160801b039283168101909216178255600282018054600160a01b60ff60a01b19909116179055604080518481526020810192909252339185917f47b2a1127ea8251f2643fef19daa05415bd86a2c7083f46f0ec1fd083e4a8a64910160405180910390a3505050565b61043661064e565b5f8281526001602052604090206002810154600160a01b900460ff166104955760405162461bcd60e51b8152602060048201526014602482015273457363726f77206973206e6f742061637469766560601b60448201526064016101ce565b60018101546001600160a01b03838116911614806104c2575060028101546001600160a01b038381169116145b6104ff5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b2103bb4b73732b960911b60448201526064016101ce565b80546001600160801b031661054c5760405162461bcd60e51b81526020600482015260136024820152724e6f2066756e647320746f2072656c6561736560681b60448201526064016101ce565b80546001600160801b03198116825560028201805460ff60a01b191690556040516001600160801b03909116906001600160a01b03841690829086907fa20198858d673ac3cf5d6f62c85cb502c39af8269735c0ef6774aff58154a429905f90a45f836001600160a01b0316826040515f6040518083038185875af1925050503d805f81146105f6576040519150601f19603f3d011682016040523d82523d5f602084013e6105fb565b606091505b505090508061063e5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064016101ce565b50505061064a60015f55565b5050565b60025f540361069f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101ce565b60025f55565b5f80604083850312156106b6575f80fd5b50508035926020909101359150565b5f80604083850312156106d6575f80fd5b8235915060208301356001600160a01b03811681146106f3575f80fd5b809150509250929050565b5f6020828403121561070e575f80fd5b503591905056fea2646970667358221220bf5416a95bb6fb7250297f4fcf97e8861e54bfb76100a560e015cde3a04a70b664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x49 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16C30EBC EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0x2FA0B49F EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x530ADBB4 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x7D25E89D EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xA0946F92 EQ PUSH2 0xFA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x80 PUSH32 0x326D994CDB81AACCB84AA1F62BAE636DC0AAF98AB22F66B0C9224F1EDCCD7CC9 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH2 0xA1 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A5 JUMP JUMPDEST PUSH2 0x191 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x80 PUSH32 0xAE8B6F0F354448B9BED217DCBB6EFFC6CC52560477CD31206503FBD937F7A378 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA6 PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x6C5 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x105 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP2 SWAP1 SWAP3 AND SWAP1 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x8A JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x1D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x125B9D985B1A590819195C1BDCDA5D PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x326D994CDB81AACCB84AA1F62BAE636DC0AAF98AB22F66B0C9224F1EDCCD7CC9 DUP2 EQ DUP1 PUSH2 0x224 JUMPI POP PUSH32 0xAE8B6F0F354448B9BED217DCBB6EFFC6CC52560477CD31206503FBD937F7A378 DUP2 EQ JUMPDEST PUSH2 0x263 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C6964206964656E74697479 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB CALLVALUE GT ISZERO PUSH2 0x2AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x416D6F756E7420746F6F206C61726765 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CE JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH32 0xCD9266B3247E553347B55E09D4519C923F5506754DD0994F36DDB0E123328337 DUP3 ADD PUSH2 0x34A JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x331 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x141B185E595C88185B1C9958591E481CD95D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x39E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x10DA185B1B195B99D95C88185B1C9958591E481CD95D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP2 AND CALLVALUE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 DUP4 AND DUP2 ADD SWAP1 SWAP3 AND OR DUP3 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER SWAP2 DUP6 SWAP2 PUSH32 0x47B2A1127EA8251F2643FEF19DAA05415BD86A2C7083F46F0EC1FD083E4A8A64 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x436 PUSH2 0x64E JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x457363726F77206973206E6F7420616374697665 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x4C2 JUMPI POP PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x4FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x24B73B30B634B2103BB4B73732B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F2066756E647320746F2072656C65617365 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH32 0xA20198858D673AC3CF5D6F62C85CB502C39AF8269735C0EF6774AFF58154A429 SWAP1 PUSH0 SWAP1 LOG4 PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CE JUMP JUMPDEST POP POP POP PUSH2 0x64A PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x69F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x70E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SLOAD AND 0xA9 JUMPDEST 0xB6 0xFB PUSH19 0x50297F4FCF97E8861E54BFB76100A560E015CD 0xE3 LOG0 BLOBBASEFEE PUSH17 0xB664736F6C634300081A00330000000000 ",
							"sourceMap": "247:3401:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;289:57;;;;;;;;;;;;327:19;289:57;;;;;160:25:2;;;148:2;133:18;289:57:1;;;;;;;;1679:1062;;;;;;:::i;:::-;;:::i;:::-;;353:65;;;;;;;;;;;;395:23;353:65;;2938:707;;;;;;;;;;-1:-1:-1;2938:707:1;;;;;:::i;:::-;;:::i;607:48::-;;;;;;;;;;-1:-1:-1;607:48:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;607:48:1;;;;-1:-1:-1;;;;;607:48:1;;;;;;;-1:-1:-1;;;607:48:1;;;;;;;;;;-1:-1:-1;;;;;1434:47:2;;;;1416:66;;-1:-1:-1;;;;;1518:32:2;;;1513:2;1498:18;;1491:60;1587:32;;;;1567:18;;;1560:60;1663:14;1656:22;1651:2;1636:18;;1629:50;1403:3;1388:19;607:48:1;1191:494:2;1679:1062:1;1804:1;1792:9;:13;1784:41;;;;-1:-1:-1;;;1784:41:1;;1892:2:2;1784:41:1;;;1874:21:2;1931:2;1911:18;;;1904:30;-1:-1:-1;;;1950:18:2;;;1943:45;2005:18;;1784:41:1;;;;;;;;;327:19;1844:8;:23;:54;;;;395:23;1871:8;:27;1844:54;1836:83;;;;-1:-1:-1;;;1836:83:1;;2236:2:2;1836:83:1;;;2218:21:2;2275:2;2255:18;;;2248:30;-1:-1:-1;;;2294:18:2;;;2287:46;2350:18;;1836:83:1;2034:340:2;1836:83:1;-1:-1:-1;;;;;1938:9:1;:30;;1930:59;;;;-1:-1:-1;;;1930:59:1;;2581:2:2;1930:59:1;;;2563:21:2;2620:2;2600:18;;;2593:30;-1:-1:-1;;;2639:18:2;;;2632:46;2695:18;;1930:59:1;2379:340:2;1930:59:1;2022:22;2047:24;;;:13;:24;;;;;2156:23;;;2152:299;;2204:13;;;;-1:-1:-1;;;;;2204:13:1;:27;2196:58;;;;-1:-1:-1;;;2196:58:1;;2926:2:2;2196:58:1;;;2908:21:2;2965:2;2945:18;;;2938:30;-1:-1:-1;;;2984:18:2;;;2977:48;3042:18;;2196:58:1;2724:342:2;2196:58:1;2269:13;;;:26;;-1:-1:-1;;;;;;2269:26:1;2285:10;2269:26;;;2152:299;;;2336:17;;;;-1:-1:-1;;;;;2336:17:1;:31;2328:66;;;;-1:-1:-1;;;2328:66:1;;3273:2:2;2328:66:1;;;3255:21:2;3312:2;3292:18;;;3285:30;-1:-1:-1;;;3331:18:2;;;3324:52;3393:18;;2328:66:1;3071:346:2;2328:66:1;2409:17;;;:30;;-1:-1:-1;;;;;;2409:30:1;2429:10;2409:30;;;2152:299;2525:40;;-1:-1:-1;;;;;;2525:40:1;;2555:9;-1:-1:-1;;;;;2525:40:1;;;;;;;;;;;2614:15;;;:22;;-1:-1:-1;;;;;;;2614:22:1;;;;;;2677:56;;;3596:25:2;;;3652:2;3637:18;;3630:34;;;;2701:10:1;;2690:9;;2677:56;;3569:18:2;2677:56:1;;;;;;;1754:987;1679:1062;;:::o;2938:707::-;2261:21:0;:19;:21::i;:::-;3028:22:1::1;3053:24:::0;;;:13:::1;:24;::::0;;;;3117:15:::1;::::0;::::1;::::0;-1:-1:-1;;;3117:15:1;::::1;;;3109:48;;;::::0;-1:-1:-1;;;3109:48:1;;3877:2:2;3109:48:1::1;::::0;::::1;3859:21:2::0;3916:2;3896:18;;;3889:30;-1:-1:-1;;;3935:18:2;;;3928:50;3995:18;;3109:48:1::1;3675:344:2::0;3109:48:1::1;3176:13;::::0;::::1;::::0;-1:-1:-1;;;;;3176:23:1;;::::1;:13:::0;::::1;:23;::::0;:54:::1;;-1:-1:-1::0;3203:17:1::1;::::0;::::1;::::0;-1:-1:-1;;;;;3203:27:1;;::::1;:17:::0;::::1;:27;3176:54;3168:81;;;::::0;-1:-1:-1;;;3168:81:1;;4226:2:2;3168:81:1::1;::::0;::::1;4208:21:2::0;4265:2;4245:18;;;4238:30;-1:-1:-1;;;4284:18:2;;;4277:44;4338:18;;3168:81:1::1;4024:338:2::0;3168:81:1::1;3268:18:::0;;-1:-1:-1;;;;;3268:18:1::1;3260:54;;;::::0;-1:-1:-1;;;3260:54:1;;4569:2:2;3260:54:1::1;::::0;::::1;4551:21:2::0;4608:2;4588:18;;;4581:30;-1:-1:-1;;;4627:18:2;;;4620:49;4686:18;;3260:54:1::1;4367:343:2::0;3260:54:1::1;3361:18:::0;;-1:-1:-1;;;;;;3390:22:1;::::1;::::0;;3423:15:::1;::::0;::::1;:23:::0;;-1:-1:-1;;;;3423:23:1::1;::::0;;3489:40:::1;::::0;-1:-1:-1;;;;;3361:18:1;;::::1;::::0;-1:-1:-1;;;;;3489:40:1;::::1;::::0;3361:18;;3503:9;;3489:40:::1;::::0;3347:11:::1;::::0;3489:40:::1;3543:12;3561:6;-1:-1:-1::0;;;;;3561:11:1::1;3580:6;3561:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3542:49;;;3610:7;3602:35;;;::::0;-1:-1:-1;;;3602:35:1;;5127:2:2;3602:35:1::1;::::0;::::1;5109:21:2::0;5166:2;5146:18;;;5139:30;-1:-1:-1;;;5185:18:2;;;5178:45;5240:18;;3602:35:1::1;4925:339:2::0;3602:35:1::1;3017:628;;;2303:20:0::0;1716:1;2809:7;:22;2629:209;2303:20;2938:707:1;;:::o;2336:287:0:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:0;;5471:2:2;2460:63:0;;;5453:21:2;5510:2;5490:18;;;5483:30;5549:33;5529:18;;;5522:61;5600:18;;2460:63:0;5269:355:2;2460:63:0;1759:1;2598:7;:18;2336:287::o;196:346:2:-;264:6;272;325:2;313:9;304:7;300:23;296:32;293:52;;;341:1;338;331:12;293:52;-1:-1:-1;;386:23:2;;;506:2;491:18;;;478:32;;-1:-1:-1;196:346:2:o;547:408::-;615:6;623;676:2;664:9;655:7;651:23;647:32;644:52;;;692:1;689;682:12;644:52;737:23;;;-1:-1:-1;836:2:2;821:18;;808:32;-1:-1:-1;;;;;871:33:2;;859:46;;849:74;;919:1;916;909:12;849:74;942:7;932:17;;;547:408;;;;;:::o;960:226::-;1019:6;1072:2;1060:9;1051:7;1047:23;1043:32;1040:52;;;1088:1;1085;1078:12;1040:52;-1:-1:-1;1133:23:2;;960:226;-1:-1:-1;960:226:2:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "373400",
								"executionCost": "22514",
								"totalCost": "395914"
							},
							"external": {
								"CHALLENGER_ROLE()": "205",
								"PLAYER_ROLE()": "161",
								"escrowStorage(bytes32)": "6934",
								"releaseFunds(bytes32,address)": "infinite",
								"storeTokens(bytes32,bytes32)": "77440"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 247,
									"end": 3648,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 247,
									"end": 3648,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 247,
									"end": 3648,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 247,
									"end": 3648,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 247,
									"end": 3648,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 247,
									"end": 3648,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 247,
									"end": 3648,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 247,
									"end": 3648,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 247,
									"end": 3648,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 247,
									"end": 3648,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 247,
									"end": 3648,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 247,
									"end": 3648,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 247,
									"end": 3648,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 247,
									"end": 3648,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 247,
									"end": 3648,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 247,
									"end": 3648,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 247,
									"end": 3648,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 247,
									"end": 3648,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 247,
									"end": 3648,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 247,
									"end": 3648,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bf5416a95bb6fb7250297f4fcf97e8861e54bfb76100a560e015cde3a04a70b664736f6c634300081a0033",
									".code": [
										{
											"begin": 247,
											"end": 3648,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "PUSH",
											"source": 1,
											"value": "16C30EBC"
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "PUSH",
											"source": 1,
											"value": "2FA0B49F"
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "PUSH",
											"source": 1,
											"value": "530ADBB4"
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "PUSH",
											"source": 1,
											"value": "7D25E89D"
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "PUSH",
											"source": 1,
											"value": "A0946F92"
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 247,
											"end": 3648,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 289,
											"end": 346,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 289,
											"end": 346,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 289,
											"end": 346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 289,
											"end": 346,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 289,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 289,
											"end": 346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 289,
											"end": 346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 289,
											"end": 346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 289,
											"end": 346,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 289,
											"end": 346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 289,
											"end": 346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 289,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 327,
											"end": 346,
											"name": "PUSH",
											"source": 1,
											"value": "326D994CDB81AACCB84AA1F62BAE636DC0AAF98AB22F66B0C9224F1EDCCD7CC9"
										},
										{
											"begin": 289,
											"end": 346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 289,
											"end": 346,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 289,
											"end": 346,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 289,
											"end": 346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 289,
											"end": 346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 289,
											"end": 346,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 289,
											"end": 346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 289,
											"end": 346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 289,
											"end": 346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 289,
											"end": 346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 289,
											"end": 346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 289,
											"end": 346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 289,
											"end": 346,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 2741,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1679,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1679,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1679,
											"end": 2741,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 2741,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1679,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1679,
											"end": 2741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 2741,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1679,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1679,
											"end": 2741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 2741,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1679,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 2741,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 353,
											"end": 418,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 353,
											"end": 418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 353,
											"end": 418,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 353,
											"end": 418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 353,
											"end": 418,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 353,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 353,
											"end": 418,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 353,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 353,
											"end": 418,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 353,
											"end": 418,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 353,
											"end": 418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 353,
											"end": 418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 353,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 395,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "AE8B6F0F354448B9BED217DCBB6EFFC6CC52560477CD31206503FBD937F7A378"
										},
										{
											"begin": 353,
											"end": 418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 353,
											"end": 418,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2938,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2938,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 607,
											"end": 655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 607,
											"end": 655,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 607,
											"end": 655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 607,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 607,
											"end": 655,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 607,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 607,
											"end": 655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 607,
											"end": 655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 607,
											"end": 655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 607,
											"end": 655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 607,
											"end": 655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 607,
											"end": 655,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 607,
											"end": 655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 655,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1482,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1518,
											"end": 1550,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1550,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1550,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1515,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1498,
											"end": 1516,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1551,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1619,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1619,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1619,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1619,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1585,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1620,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1677,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1656,
											"end": 1678,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1653,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 1406,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1388,
											"end": 1407,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 607,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1191,
											"end": 1685,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 2741,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1679,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1805,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1801,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1805,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1784,
											"end": 1825,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1784,
											"end": 1825,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1784,
											"end": 1825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 1894,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1784,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1784,
											"end": 1825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 1911,
											"end": 1929,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1911,
											"end": 1929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 1929,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1904,
											"end": 1934,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A590819195C1BDCDA5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1988,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2023,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2005,
											"end": 2023,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1825,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1784,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1784,
											"end": 1825,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1825,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1825,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1825,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1825,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1784,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 327,
											"end": 346,
											"name": "PUSH",
											"source": 1,
											"value": "326D994CDB81AACCB84AA1F62BAE636DC0AAF98AB22F66B0C9224F1EDCCD7CC9"
										},
										{
											"begin": 1844,
											"end": 1852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1867,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1898,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1844,
											"end": 1898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 395,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "AE8B6F0F354448B9BED217DCBB6EFFC6CC52560477CD31206503FBD937F7A378"
										},
										{
											"begin": 1871,
											"end": 1879,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1898,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1898,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1844,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1836,
											"end": 1919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1836,
											"end": 1919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1836,
											"end": 1919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1836,
											"end": 1919,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1836,
											"end": 1919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2239,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2277,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964206964656E74697479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2287,
											"end": 2333,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2368,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2350,
											"end": 2368,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2034,
											"end": 2374,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1919,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1836,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1938,
											"end": 1947,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1930,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1930,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1989,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1930,
											"end": 1989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1930,
											"end": 1989,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2583,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1930,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1930,
											"end": 1989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1930,
											"end": 1989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2600,
											"end": 2618,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2600,
											"end": 2618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2593,
											"end": 2623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "416D6F756E7420746F6F206C61726765"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2678,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2695,
											"end": 2713,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2695,
											"end": 2713,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1930,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2379,
											"end": 2719,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1930,
											"end": 1989,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2060,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2047,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2047,
											"end": 2071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2047,
											"end": 2071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2071,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2179,
											"name": "PUSH",
											"source": 1,
											"value": "CD9266B3247E553347B55E09D4519C923F5506754DD0994F36DDB0E123328337"
										},
										{
											"begin": 2156,
											"end": 2179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2152,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2152,
											"end": 2451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2204,
											"end": 2217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2217,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2204,
											"end": 2217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2196,
											"end": 2254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2254,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2254,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2196,
											"end": 2254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2254,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2928,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2196,
											"end": 2254,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2196,
											"end": 2254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2929,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2967,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2945,
											"end": 2963,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2945,
											"end": 2963,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2963,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2938,
											"end": 2968,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "141B185E595C88185B1C9958591E481CD95D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2984,
											"end": 3002,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2984,
											"end": 3002,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3002,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 3025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3060,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3042,
											"end": 3060,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2724,
											"end": 3066,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2196,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2282,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2269,
											"end": 2282,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2295,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2295,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2295,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2295,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2295,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2295,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2152,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2152,
											"end": 2451,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2152,
											"end": 2451,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2152,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2353,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2336,
											"end": 2353,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2353,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2353,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2336,
											"end": 2353,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2367,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2328,
											"end": 2394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2394,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2328,
											"end": 2394,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2394,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3275,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2328,
											"end": 2394,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3276,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3312,
											"end": 3314,
											"name": "PUSH",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3285,
											"end": 3315,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10DA185B1B195B99D95C88185B1C9958591E481CD95D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3331,
											"end": 3349,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3331,
											"end": 3349,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3331,
											"end": 3349,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3324,
											"end": 3376,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3071,
											"end": 3417,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2328,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2409,
											"end": 2426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2439,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2439,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2409,
											"end": 2439,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2429,
											"end": 2439,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2439,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2439,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2152,
											"end": 2451,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2152,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2565,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2525,
											"end": 2565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2565,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2564,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2525,
											"end": 2565,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2565,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2565,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2565,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2565,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2565,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2565,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2629,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2614,
											"end": 2629,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2629,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2636,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2614,
											"end": 2636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2636,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2636,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2636,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2733,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2733,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3621,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3596,
											"end": 3621,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3596,
											"end": 3621,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3655,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3655,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3630,
											"end": 3664,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3630,
											"end": 3664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3630,
											"end": 3664,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3630,
											"end": 3664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2699,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2733,
											"name": "PUSH",
											"source": 1,
											"value": "47B2A1127EA8251F2643FEF19DAA05415BD86A2C7083F46F0EC1FD083E4A8A64"
										},
										{
											"begin": 2677,
											"end": 2733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2733,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2733,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2733,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2733,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 2741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 2741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 2741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 2741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3053,
											"end": 3077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3077,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3077,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3053,
											"end": 3077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3053,
											"end": 3077,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3053,
											"end": 3077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3077,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3117,
											"end": 3132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3132,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3132,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3117,
											"end": 3132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3132,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3117,
											"end": 3132,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3109,
											"end": 3157,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3109,
											"end": 3157,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3109,
											"end": 3157,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3109,
											"end": 3157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3109,
											"end": 3157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3157,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 3918,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3896,
											"end": 3914,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3896,
											"end": 3914,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 3914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3889,
											"end": 3919,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "457363726F77206973206E6F7420616374697665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3935,
											"end": 3953,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3935,
											"end": 3953,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 3953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 3978,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4013,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3995,
											"end": 4013,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3109,
											"end": 3157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3675,
											"end": 4019,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3109,
											"end": 3157,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3109,
											"end": 3157,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3176,
											"end": 3189,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3176,
											"end": 3189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3176,
											"end": 3189,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3176,
											"end": 3189,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3176,
											"end": 3199,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3176,
											"end": 3199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3176,
											"end": 3199,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3176,
											"end": 3189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3176,
											"end": 3189,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3176,
											"end": 3199,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3176,
											"end": 3199,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3176,
											"end": 3230,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3176,
											"end": 3230,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3203,
											"end": 3220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3203,
											"end": 3220,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3220,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3220,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3203,
											"end": 3230,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3230,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3220,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3230,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3176,
											"end": 3230,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3176,
											"end": 3230,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3168,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3168,
											"end": 3249,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3168,
											"end": 3249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4228,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3168,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3168,
											"end": 3249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3249,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4229,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4267,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 4245,
											"end": 4263,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4245,
											"end": 4263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4245,
											"end": 4263,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4238,
											"end": 4268,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B634B2103BB4B73732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4321,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4338,
											"end": 4356,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4338,
											"end": 4356,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3168,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4024,
											"end": 4362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3168,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3168,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3286,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3268,
											"end": 3286,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3260,
											"end": 3314,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3260,
											"end": 3314,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3260,
											"end": 3314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3314,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4569,
											"end": 4571,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3260,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3260,
											"end": 3314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3314,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4551,
											"end": 4572,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4610,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 4588,
											"end": 4606,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4588,
											"end": 4606,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4588,
											"end": 4606,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4611,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F2066756E647320746F2072656C65617365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4627,
											"end": 4645,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4627,
											"end": 4645,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4627,
											"end": 4645,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4620,
											"end": 4669,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4686,
											"end": 4704,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4686,
											"end": 4704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3260,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4367,
											"end": 4710,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3260,
											"end": 3314,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3260,
											"end": 3314,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3379,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3412,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3412,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3423,
											"end": 3438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3438,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3446,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3423,
											"end": 3446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3446,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3489,
											"end": 3529,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3361,
											"end": 3379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3379,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3529,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3512,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A20198858D673AC3CF5D6F62C85CB502C39AF8269735C0EF6774AFF58154A429"
										},
										{
											"begin": 3489,
											"end": 3529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3529,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 3543,
											"end": 3555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3567,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3561,
											"end": 3572,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3580,
											"end": 3586,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3591,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3591,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3591,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3591,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3617,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3602,
											"end": 3637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3602,
											"end": 3637,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3602,
											"end": 3637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3602,
											"end": 3637,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3602,
											"end": 3637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3602,
											"end": 3637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5127,
											"end": 5129,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3602,
											"end": 3637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3602,
											"end": 3637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3602,
											"end": 3637,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5109,
											"end": 5130,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5166,
											"end": 5168,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 5146,
											"end": 5164,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5146,
											"end": 5164,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5146,
											"end": 5164,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5139,
											"end": 5169,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5185,
											"end": 5203,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5185,
											"end": 5203,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5185,
											"end": 5203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5178,
											"end": 5223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5240,
											"end": 5258,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5240,
											"end": 5258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3602,
											"end": 3637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4925,
											"end": 5264,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3602,
											"end": 3637,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3602,
											"end": 3637,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3645,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3645,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3645,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 3645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 3645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5473,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5474,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5510,
											"end": 5512,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5490,
											"end": 5508,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5490,
											"end": 5508,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5490,
											"end": 5508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5483,
											"end": 5513,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5549,
											"end": 5582,
											"name": "PUSH",
											"source": 2,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 5529,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5529,
											"end": 5547,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5522,
											"end": 5583,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5269,
											"end": 5624,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 196,
											"end": 542,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 196,
											"end": 542,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 264,
											"end": 270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 278,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 325,
											"end": 327,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 322,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 304,
											"end": 311,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 300,
											"end": 323,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 296,
											"end": 328,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 293,
											"end": 345,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 293,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 293,
											"end": 345,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 341,
											"end": 342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 339,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 331,
											"end": 343,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 293,
											"end": 345,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 293,
											"end": 345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 386,
											"end": 409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 506,
											"end": 508,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 491,
											"end": 509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 509,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 478,
											"end": 510,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 478,
											"end": 510,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 547,
											"end": 955,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 547,
											"end": 955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 615,
											"end": 621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 629,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 676,
											"end": 678,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 664,
											"end": 673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 655,
											"end": 662,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 651,
											"end": 674,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 647,
											"end": 679,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 644,
											"end": 696,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 644,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 644,
											"end": 696,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 692,
											"end": 693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 689,
											"end": 690,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 682,
											"end": 694,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 644,
											"end": 696,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 644,
											"end": 696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 737,
											"end": 760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 737,
											"end": 760,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 737,
											"end": 760,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 836,
											"end": 838,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 821,
											"end": 839,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 821,
											"end": 839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 808,
											"end": 840,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 871,
											"end": 904,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 871,
											"end": 904,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 859,
											"end": 905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 859,
											"end": 905,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 849,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 849,
											"end": 923,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 919,
											"end": 920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 916,
											"end": 917,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 909,
											"end": 921,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 849,
											"end": 923,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 849,
											"end": 923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 942,
											"end": 949,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 932,
											"end": 949,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 932,
											"end": 949,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 932,
											"end": 949,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 547,
											"end": 955,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 547,
											"end": 955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 547,
											"end": 955,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 547,
											"end": 955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 547,
											"end": 955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 547,
											"end": 955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1186,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 960,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1074,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1060,
											"end": 1069,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1058,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1047,
											"end": 1070,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1043,
											"end": 1075,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1092,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1040,
											"end": 1092,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1088,
											"end": 1089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1086,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1090,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1092,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1040,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1133,
											"end": 1156,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1133,
											"end": 1156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1186,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 960,
											"end": 1186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"Escrow.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CHALLENGER_ROLE()": "530adbb4",
							"PLAYER_ROLE()": "16c30ebc",
							"escrowStorage(bytes32)": "a0946f92",
							"releaseFunds(bytes32,address)": "7d25e89d",
							"storeTokens(bytes32,bytes32)": "2fa0b49f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"storeHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"ReleasedFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"storeHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"identity\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensStored\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CHALLENGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PLAYER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"escrowStorage\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"challenger\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"storeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"releaseFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"storeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"identity\",\"type\":\"bytes32\"}],\"name\":\"storeTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An escrow contract for holding funds between two parties\",\"events\":{\"ReleasedFunds(bytes32,uint256,address)\":{\"params\":{\"amount\":\"The amount of Ether released\",\"storeHash\":\"The unique hash identifying the escrow\",\"winner\":\"The address receiving the funds\"}},\"TokensStored(bytes32,address,bytes32,uint256)\":{\"params\":{\"amount\":\"The amount of Ether deposited\",\"depositor\":\"The address of the depositor\",\"identity\":\"The role of the depositor (PLAYER_ROLE or CHALLENGER_ROLE)\",\"storeHash\":\"The unique hash identifying the escrow\"}}},\"kind\":\"dev\",\"methods\":{\"releaseFunds(bytes32,address)\":{\"params\":{\"storeHash\":\"The unique identifier for this escrow\",\"winner\":\"The address that should receive the funds\"}},\"storeTokens(bytes32,bytes32)\":{\"params\":{\"identity\":\"The role of the depositor (PLAYER_ROLE or CHALLENGER_ROLE)\",\"storeHash\":\"The unique identifier for this escrow\"}}},\"title\":\"Escrow\",\"version\":1},\"userdoc\":{\"events\":{\"ReleasedFunds(bytes32,uint256,address)\":{\"notice\":\"Emitted when funds are released from an escrow\"},\"TokensStored(bytes32,address,bytes32,uint256)\":{\"notice\":\"Emitted when a deposit is made to an escrow\"}},\"kind\":\"user\",\"methods\":{\"releaseFunds(bytes32,address)\":{\"notice\":\"Release funds to the winner\"},\"storeTokens(bytes32,bytes32)\":{\"notice\":\"Store tokens in the escrow\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Escrow.sol\":\"Escrow\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"Escrow.sol\":{\"keccak256\":\"0x406e21cab6bfb68f9f13af6a22ab70109cd2d658fcbc330642d561ad21da3eaf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4b61f79fdaa1206a1320da62cd28e2943e77a9177ce662ed332e269a1d7708bf\",\"dweb:/ipfs/Qmahvp6mpj1nY81uzyu2EF22Aqa5nKvBegcrryLh5HSKoE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "Escrow.sol:Escrow",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 95,
								"contract": "Escrow.sol:Escrow",
								"label": "escrowStorage",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(Storage)90_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_struct(Storage)90_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct Escrow.Storage)",
								"numberOfBytes": "32",
								"value": "t_struct(Storage)90_storage"
							},
							"t_struct(Storage)90_storage": {
								"encoding": "inplace",
								"label": "struct Escrow.Storage",
								"members": [
									{
										"astId": 83,
										"contract": "Escrow.sol:Escrow",
										"label": "totalAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint128"
									},
									{
										"astId": 85,
										"contract": "Escrow.sol:Escrow",
										"label": "player",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 87,
										"contract": "Escrow.sol:Escrow",
										"label": "challenger",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 89,
										"contract": "Escrow.sol:Escrow",
										"label": "isActive",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"ReleasedFunds(bytes32,uint256,address)": {
								"notice": "Emitted when funds are released from an escrow"
							},
							"TokensStored(bytes32,address,bytes32,uint256)": {
								"notice": "Emitted when a deposit is made to an escrow"
							}
						},
						"kind": "user",
						"methods": {
							"releaseFunds(bytes32,address)": {
								"notice": "Release funds to the winner"
							},
							"storeTokens(bytes32,bytes32)": {
								"notice": "Store tokens in the escrow"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							64
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1676:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1723:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1767:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1811:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1831:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:0"
									},
									"scope": 64,
									"src": "1797:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "2251:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 21,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2261:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2303:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 29,
									"name": "nonReentrant",
									"nameLocation": "2236:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:0"
									},
									"src": "2227:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2375:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 34,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2479:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2608:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:0"
									},
									"scope": 64,
									"src": "2336:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2667:171:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2819:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:0"
									},
									"scope": 64,
									"src": "2629:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3081:43:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 58,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "3098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 59,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3109:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 57,
												"id": 61,
												"nodeType": "Return",
												"src": "3091:26:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3075:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:0"
									},
									"scope": 64,
									"src": "3017:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 65,
							"src": "888:2238:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:0"
				},
				"id": 0
			},
			"Escrow.sol": {
				"ast": {
					"absolutePath": "Escrow.sol",
					"exportedSymbols": {
						"Escrow": [
							313
						],
						"ReentrancyGuard": [
							64
						]
					},
					"id": 314,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 66,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 68,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 314,
							"sourceUnit": 65,
							"src": "64:85:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 67,
										"name": "ReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 64,
										"src": "72:15:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 70,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"266:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 64,
										"src": "266:15:1"
									},
									"id": 71,
									"nodeType": "InheritanceSpecifier",
									"src": "266:15:1"
								}
							],
							"canonicalName": "Escrow",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 69,
								"nodeType": "StructuredDocumentation",
								"src": "153:92:1",
								"text": " @title Escrow\n @dev An escrow contract for holding funds between two parties"
							},
							"fullyImplemented": true,
							"id": 313,
							"linearizedBaseContracts": [
								313,
								64
							],
							"name": "Escrow",
							"nameLocation": "256:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "16c30ebc",
									"id": 76,
									"mutability": "constant",
									"name": "PLAYER_ROLE",
									"nameLocation": "313:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 313,
									"src": "289:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 72,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "289:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "706c61796572",
												"id": 74,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "337:8:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_326d994cdb81aaccb84aa1f62bae636dc0aaf98ab22f66b0c9224f1edccd7cc9",
													"typeString": "literal_string \"player\""
												},
												"value": "player"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_326d994cdb81aaccb84aa1f62bae636dc0aaf98ab22f66b0c9224f1edccd7cc9",
													"typeString": "literal_string \"player\""
												}
											],
											"id": 73,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "327:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 75,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "327:19:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "530adbb4",
									"id": 81,
									"mutability": "constant",
									"name": "CHALLENGER_ROLE",
									"nameLocation": "377:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 313,
									"src": "353:65:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 77,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "353:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "6368616c6c656e676572",
												"id": 79,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "405:12:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_ae8b6f0f354448b9bed217dcbb6effc6cc52560477cd31206503fbd937f7a378",
													"typeString": "literal_string \"challenger\""
												},
												"value": "challenger"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_ae8b6f0f354448b9bed217dcbb6effc6cc52560477cd31206503fbd937f7a378",
													"typeString": "literal_string \"challenger\""
												}
											],
											"id": 78,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "395:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 80,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "395:23:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Escrow.Storage",
									"id": 90,
									"members": [
										{
											"constant": false,
											"id": 83,
											"mutability": "mutable",
											"name": "totalAmount",
											"nameLocation": "461:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 90,
											"src": "453:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 82,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "453:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 85,
											"mutability": "mutable",
											"name": "player",
											"nameLocation": "532:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 90,
											"src": "524:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 84,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 87,
											"mutability": "mutable",
											"name": "challenger",
											"nameLocation": "557:10:1",
											"nodeType": "VariableDeclaration",
											"scope": 90,
											"src": "549:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 86,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "549:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 89,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "583:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 90,
											"src": "578:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 88,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "578:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Storage",
									"nameLocation": "434:7:1",
									"nodeType": "StructDefinition",
									"scope": 313,
									"src": "427:172:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a0946f92",
									"id": 95,
									"mutability": "mutable",
									"name": "escrowStorage",
									"nameLocation": "642:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 313,
									"src": "607:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Storage_$90_storage_$",
										"typeString": "mapping(bytes32 => struct Escrow.Storage)"
									},
									"typeName": {
										"id": 94,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 91,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "615:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "607:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Storage_$90_storage_$",
											"typeString": "mapping(bytes32 => struct Escrow.Storage)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 93,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 92,
												"name": "Storage",
												"nameLocations": [
													"626:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 90,
												"src": "626:7:1"
											},
											"referencedDeclaration": 90,
											"src": "626:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Storage_$90_storage_ptr",
												"typeString": "struct Escrow.Storage"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "679:325:1",
										"text": " @notice Emitted when a deposit is made to an escrow\n @param storeHash The unique hash identifying the escrow\n @param depositor The address of the depositor\n @param identity The role of the depositor (PLAYER_ROLE or CHALLENGER_ROLE)\n @param amount The amount of Ether deposited"
									},
									"eventSelector": "47b2a1127ea8251f2643fef19daa05415bd86a2c7083f46f0ec1fd083e4a8a64",
									"id": 106,
									"name": "TokensStored",
									"nameLocation": "1016:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "storeHash",
												"nameLocation": "1045:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1029:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 97,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"indexed": true,
												"mutability": "mutable",
												"name": "depositor",
												"nameLocation": "1072:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1056:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"indexed": false,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "1091:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1083:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 101,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1106:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1101:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1101:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:85:1"
									},
									"src": "1010:104:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "1122:244:1",
										"text": " @notice Emitted when funds are released from an escrow\n @param storeHash The unique hash identifying the escrow\n @param amount The amount of Ether released\n @param winner The address receiving the funds"
									},
									"eventSelector": "a20198858d673ac3cf5d6f62c85cb502c39af8269735c0ef6774aff58154a429",
									"id": 115,
									"name": "ReleasedFunds",
									"nameLocation": "1378:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"mutability": "mutable",
												"name": "storeHash",
												"nameLocation": "1408:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1392:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 108,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1432:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1419:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1419:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"indexed": true,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "1456:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1440:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1391:72:1"
									},
									"src": "1372:92:1"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "1754:987:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 124,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1792:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1796:5:1",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1792:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1804:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1792:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206465706f736974",
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1807:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d7af5be9aab3888d31c7efc542660ce3d6e5f4d8ab5243a715829c1b29a0c28",
																"typeString": "literal_string \"Invalid deposit\""
															},
															"value": "Invalid deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3d7af5be9aab3888d31c7efc542660ce3d6e5f4d8ab5243a715829c1b29a0c28",
																"typeString": "literal_string \"Invalid deposit\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1784:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1784:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "1784:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 132,
																	"name": "identity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "1844:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 133,
																	"name": "PLAYER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "1856:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1844:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 135,
																	"name": "identity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "1871:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 136,
																	"name": "CHALLENGER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "1883:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1871:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1844:54:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206964656e74697479",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1900:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b86fa13ce55eac850d7e3b6c12f646468ec18db6145892a7242758249f98fc8",
																"typeString": "literal_string \"Invalid identity\""
															},
															"value": "Invalid identity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b86fa13ce55eac850d7e3b6c12f646468ec18db6145892a7242758249f98fc8",
																"typeString": "literal_string \"Invalid identity\""
															}
														],
														"id": 131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1836:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1836:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "1836:83:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 143,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1938:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1942:5:1",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1938:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1956:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 146,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "1956:7:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			}
																		],
																		"id": 145,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1951:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1951:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint128",
																		"typeString": "type(uint128)"
																	}
																},
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1965:3:1",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "1951:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "1938:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e7420746f6f206c61726765",
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1970:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff",
																"typeString": "literal_string \"Amount too large\""
															},
															"value": "Amount too large"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff",
																"typeString": "literal_string \"Amount too large\""
															}
														],
														"id": 142,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1930:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1930:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "1930:59:1"
											},
											{
												"assignments": [
													156
												],
												"declarations": [
													{
														"constant": false,
														"id": 156,
														"mutability": "mutable",
														"name": "escrow",
														"nameLocation": "2038:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 229,
														"src": "2022:22:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Storage_$90_storage_ptr",
															"typeString": "struct Escrow.Storage"
														},
														"typeName": {
															"id": 155,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 154,
																"name": "Storage",
																"nameLocations": [
																	"2022:7:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 90,
																"src": "2022:7:1"
															},
															"referencedDeclaration": 90,
															"src": "2022:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Storage_$90_storage_ptr",
																"typeString": "struct Escrow.Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 160,
												"initialValue": {
													"baseExpression": {
														"id": 157,
														"name": "escrowStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "2047:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Storage_$90_storage_$",
															"typeString": "mapping(bytes32 => struct Escrow.Storage storage ref)"
														}
													},
													"id": 159,
													"indexExpression": {
														"id": 158,
														"name": "storeHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2061:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2047:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Storage_$90_storage",
														"typeString": "struct Escrow.Storage storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2022:49:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 161,
														"name": "identity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2156:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 162,
														"name": "PLAYER_ROLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2168:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2156:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 201,
													"nodeType": "Block",
													"src": "2313:138:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 184,
																				"name": "escrow",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 156,
																				"src": "2336:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Storage_$90_storage_ptr",
																					"typeString": "struct Escrow.Storage storage pointer"
																				}
																			},
																			"id": 185,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2343:10:1",
																			"memberName": "challenger",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 87,
																			"src": "2336:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 188,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2365:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2357:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 186,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2357:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2357:10:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "2336:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4368616c6c656e67657220616c726561647920736574",
																		"id": 191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2369:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f151c425a5d22f820fee196faae214ebc444adc8c5af4915889ed2f5c59754f6",
																			"typeString": "literal_string \"Challenger already set\""
																		},
																		"value": "Challenger already set"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_f151c425a5d22f820fee196faae214ebc444adc8c5af4915889ed2f5c59754f6",
																			"typeString": "literal_string \"Challenger already set\""
																		}
																	],
																	"id": 183,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2328:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2328:66:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 193,
															"nodeType": "ExpressionStatement",
															"src": "2328:66:1"
														},
														{
															"expression": {
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 194,
																		"name": "escrow",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 156,
																		"src": "2409:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Storage_$90_storage_ptr",
																			"typeString": "struct Escrow.Storage storage pointer"
																		}
																	},
																	"id": 196,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2416:10:1",
																	"memberName": "challenger",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 87,
																	"src": "2409:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 197,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2429:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2433:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2429:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2409:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 200,
															"nodeType": "ExpressionStatement",
															"src": "2409:30:1"
														}
													]
												},
												"id": 202,
												"nodeType": "IfStatement",
												"src": "2152:299:1",
												"trueBody": {
													"id": 182,
													"nodeType": "Block",
													"src": "2181:126:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 165,
																				"name": "escrow",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 156,
																				"src": "2204:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Storage_$90_storage_ptr",
																					"typeString": "struct Escrow.Storage storage pointer"
																				}
																			},
																			"id": 166,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2211:6:1",
																			"memberName": "player",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 85,
																			"src": "2204:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 169,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2229:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 168,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2221:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 167,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2221:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2221:10:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "2204:27:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "506c6179657220616c726561647920736574",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2233:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2834909f9e792c71d94c73eec0d7f12b2dae20e3964e6808f416aa7bea29e363",
																			"typeString": "literal_string \"Player already set\""
																		},
																		"value": "Player already set"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_2834909f9e792c71d94c73eec0d7f12b2dae20e3964e6808f416aa7bea29e363",
																			"typeString": "literal_string \"Player already set\""
																		}
																	],
																	"id": 164,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2196:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2196:58:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 174,
															"nodeType": "ExpressionStatement",
															"src": "2196:58:1"
														},
														{
															"expression": {
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 175,
																		"name": "escrow",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 156,
																		"src": "2269:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Storage_$90_storage_ptr",
																			"typeString": "struct Escrow.Storage storage pointer"
																		}
																	},
																	"id": 177,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2276:6:1",
																	"memberName": "player",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 85,
																	"src": "2269:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 178,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2285:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2289:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2285:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2269:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 181,
															"nodeType": "ExpressionStatement",
															"src": "2269:26:1"
														}
													]
												}
											},
											{
												"id": 213,
												"nodeType": "UncheckedBlock",
												"src": "2500:104:1",
												"statements": [
													{
														"expression": {
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 203,
																	"name": "escrow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 156,
																	"src": "2525:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Storage_$90_storage_ptr",
																		"typeString": "struct Escrow.Storage storage pointer"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "2532:11:1",
																"memberName": "totalAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 83,
																"src": "2525:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 208,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2555:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2559:5:1",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "2555:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2547:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 206,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "2547:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2547:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "2525:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"id": 212,
														"nodeType": "ExpressionStatement",
														"src": "2525:40:1"
													}
												]
											},
											{
												"expression": {
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 214,
															"name": "escrow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "2614:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Storage_$90_storage_ptr",
																"typeString": "struct Escrow.Storage storage pointer"
															}
														},
														"id": 216,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2621:8:1",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 89,
														"src": "2614:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2632:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2614:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2614:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 221,
															"name": "storeHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "2690:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 222,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2701:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2705:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2701:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "identity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "2713:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 225,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2723:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2727:5:1",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2723:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 220,
														"name": "TokensStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "2677:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bytes32_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,address,bytes32,uint256)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2677:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "EmitStatement",
												"src": "2672:61:1"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "1472:201:1",
										"text": " @notice Store tokens in the escrow\n @param storeHash The unique identifier for this escrow\n @param identity The role of the depositor (PLAYER_ROLE or CHALLENGER_ROLE)"
									},
									"functionSelector": "2fa0b49f",
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "storeTokens",
									"nameLocation": "1688:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "storeHash",
												"nameLocation": "1708:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1700:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1700:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "1727:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1719:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1699:37:1"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1754:0:1"
									},
									"scope": 313,
									"src": "1679:1062:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "3017:628:1",
										"statements": [
											{
												"assignments": [
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "escrow",
														"nameLocation": "3044:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "3028:22:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Storage_$90_storage_ptr",
															"typeString": "struct Escrow.Storage"
														},
														"typeName": {
															"id": 241,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 240,
																"name": "Storage",
																"nameLocations": [
																	"3028:7:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 90,
																"src": "3028:7:1"
															},
															"referencedDeclaration": 90,
															"src": "3028:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Storage_$90_storage_ptr",
																"typeString": "struct Escrow.Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"baseExpression": {
														"id": 243,
														"name": "escrowStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "3053:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Storage_$90_storage_$",
															"typeString": "mapping(bytes32 => struct Escrow.Storage storage ref)"
														}
													},
													"id": 245,
													"indexExpression": {
														"id": 244,
														"name": "storeHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "3067:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3053:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Storage_$90_storage",
														"typeString": "struct Escrow.Storage storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3028:49:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 248,
																"name": "escrow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "3117:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Storage_$90_storage_ptr",
																	"typeString": "struct Escrow.Storage storage pointer"
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3124:8:1",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 89,
															"src": "3117:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "457363726f77206973206e6f7420616374697665",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3134:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6eb06e06fcd0d0a7f69348337b3636931e73e95050a7b6d99dfd506e270dd7c",
																"typeString": "literal_string \"Escrow is not active\""
															},
															"value": "Escrow is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6eb06e06fcd0d0a7f69348337b3636931e73e95050a7b6d99dfd506e270dd7c",
																"typeString": "literal_string \"Escrow is not active\""
															}
														],
														"id": 247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3109:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3109:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "3109:48:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 254,
																		"name": "escrow",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "3176:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Storage_$90_storage_ptr",
																			"typeString": "struct Escrow.Storage storage pointer"
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3183:6:1",
																	"memberName": "player",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 85,
																	"src": "3176:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 256,
																	"name": "winner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "3193:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3176:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 258,
																		"name": "escrow",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "3203:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Storage_$90_storage_ptr",
																			"typeString": "struct Escrow.Storage storage pointer"
																		}
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3210:10:1",
																	"memberName": "challenger",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 87,
																	"src": "3203:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 260,
																	"name": "winner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "3224:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3203:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3176:54:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642077696e6e6572",
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3232:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_979a3de985022509ab207243cef88c77e8cce3c574fa2744b0ab3918ad9ec6db",
																"typeString": "literal_string \"Invalid winner\""
															},
															"value": "Invalid winner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_979a3de985022509ab207243cef88c77e8cce3c574fa2744b0ab3918ad9ec6db",
																"typeString": "literal_string \"Invalid winner\""
															}
														],
														"id": 253,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3168:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "3168:81:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 267,
																	"name": "escrow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "3268:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Storage_$90_storage_ptr",
																		"typeString": "struct Escrow.Storage storage pointer"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3275:11:1",
																"memberName": "totalAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 83,
																"src": "3268:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3289:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3268:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2066756e647320746f2072656c65617365",
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3292:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baf6121af5fd524695b1cd155075988c4212e23b4095a08f18b3a699c30a8f4b",
																"typeString": "literal_string \"No funds to release\""
															},
															"value": "No funds to release"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baf6121af5fd524695b1cd155075988c4212e23b4095a08f18b3a699c30a8f4b",
																"typeString": "literal_string \"No funds to release\""
															}
														],
														"id": 266,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3260:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3260:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 273,
												"nodeType": "ExpressionStatement",
												"src": "3260:54:1"
											},
											{
												"assignments": [
													275
												],
												"declarations": [
													{
														"constant": false,
														"id": 275,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "3352:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "3347:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 274,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3347:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"expression": {
														"id": 276,
														"name": "escrow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "3361:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Storage_$90_storage_ptr",
															"typeString": "struct Escrow.Storage storage pointer"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3368:11:1",
													"memberName": "totalAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 83,
													"src": "3361:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3347:32:1"
											},
											{
												"expression": {
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 279,
															"name": "escrow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3390:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Storage_$90_storage_ptr",
																"typeString": "struct Escrow.Storage storage pointer"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3397:11:1",
														"memberName": "totalAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 83,
														"src": "3390:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3411:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3390:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "3390:22:1"
											},
											{
												"expression": {
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 285,
															"name": "escrow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3423:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Storage_$90_storage_ptr",
																"typeString": "struct Escrow.Storage storage pointer"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3430:8:1",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 89,
														"src": "3423:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 288,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3441:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3423:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "3423:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 292,
															"name": "storeHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "3503:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 293,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "3514:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 294,
															"name": "winner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "3522:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 291,
														"name": "ReleasedFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "3489:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (bytes32,uint256,address)"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3489:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "EmitStatement",
												"src": "3484:45:1"
											},
											{
												"assignments": [
													298,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 298,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3548:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "3543:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 297,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3543:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 305,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3588:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 299,
																"name": "winner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "3561:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3568:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3561:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 301,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "3580:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3561:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3561:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3542:49:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 307,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "3610:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3619:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3602:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3602:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "3602:35:1"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "2749:183:1",
										"text": " @notice Release funds to the winner\n @param storeHash The unique identifier for this escrow\n @param winner The address that should receive the funds"
									},
									"functionSelector": "7d25e89d",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 238,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 237,
												"name": "nonReentrant",
												"nameLocations": [
													"3004:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "3004:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3004:12:1"
										}
									],
									"name": "releaseFunds",
									"nameLocation": "2947:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "storeHash",
												"nameLocation": "2968:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "2960:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 232,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2960:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "2987:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "2979:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2979:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2959:35:1"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3017:0:1"
									},
									"scope": 313,
									"src": "2938:707:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 314,
							"src": "247:3401:1",
							"usedErrors": [],
							"usedEvents": [
								106,
								115
							]
						}
					],
					"src": "37:3611:1"
				},
				"id": 1
			}
		}
	}
}